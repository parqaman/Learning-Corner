{
  "stats": {
    "suites": 13,
    "tests": 33,
    "passes": 33,
    "pending": 0,
    "failures": 0,
    "start": "2023-01-21T19:34:10.716Z",
    "end": "2023-01-21T19:34:13.228Z",
    "duration": 2512,
    "testsRegistered": 33,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "55de86b2-0c28-4463-9505-31ed89fd1e9d",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6b7634e3-76c4-4c53-8ccf-8db9983b0868",
          "title": "Auth Controller Test",
          "fullFile": "D:\\h_da\\6.Semester\\FWE\\Projekt\\learning-corner\\backend\\test\\auth.controller.test.ts",
          "file": "\\test\\auth.controller.test.ts",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Auth Controller Test\"",
              "fullTitle": "Auth Controller Test \"after all\" hook in \"Auth Controller Test\"",
              "timedOut": false,
              "duration": 41,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(\"localhost:4000/users\")\n    .delete(\"/\" + userId)\n    .set(\"Authorization\", token)\n    .end((err, res) => {\n    if (err)\n        throw err;\n    done();\n});",
              "err": {},
              "uuid": "c1a360b9-7f29-49df-9790-128537cad646",
              "parentUUID": "6b7634e3-76c4-4c53-8ccf-8db9983b0868",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "1576a1c9-d10e-4832-b61a-bbb06b7716c8",
              "title": "Register",
              "fullFile": "D:\\h_da\\6.Semester\\FWE\\Projekt\\learning-corner\\backend\\test\\auth.controller.test.ts",
              "file": "\\test\\auth.controller.test.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "can successfully register a new user",
                  "fullTitle": "Auth Controller Test Register can successfully register a new user",
                  "timedOut": false,
                  "duration": 192,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .post(\"/register\")\n    .send(mockupData_1.mockup_user)\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(201);\n    (0, chai_1.expect)(res.body.id).not.to.be.null;\n    (0, chai_1.expect)(res.body.firstName).to.be.equal(mockupData_1.mockup_user.firstName);\n    (0, chai_1.expect)(res.body.lastName).to.be.equal(mockupData_1.mockup_user.lastName);\n    (0, chai_1.expect)(res.body.email).to.be.equal(mockupData_1.mockup_user.email);\n    (0, chai_1.expect)(res.body.photo).to.be.equal(mockupData_1.mockup_user.photo);\n    userId = res.body.id;\n    if (err)\n        throw err;\n    done();\n});",
                  "err": {},
                  "uuid": "ad6d4812-3519-498b-81ac-65b9220b8b6c",
                  "parentUUID": "1576a1c9-d10e-4832-b61a-bbb06b7716c8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "cannot register a new user with a registered email",
                  "fullTitle": "Auth Controller Test Register cannot register a new user with a registered email",
                  "timedOut": false,
                  "duration": 113,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .post(\"/register\")\n    .send(mockupData_1.mockup_user)\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(400);\n    if (err)\n        throw err;\n    done();\n});",
                  "err": {},
                  "uuid": "9e7401fe-503c-4f3c-b90f-c000b5795dc8",
                  "parentUUID": "1576a1c9-d10e-4832-b61a-bbb06b7716c8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ad6d4812-3519-498b-81ac-65b9220b8b6c",
                "9e7401fe-503c-4f3c-b90f-c000b5795dc8"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 305,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "5a57304e-8b68-4525-a71c-025040c526d1",
              "title": "Login",
              "fullFile": "D:\\h_da\\6.Semester\\FWE\\Projekt\\learning-corner\\backend\\test\\auth.controller.test.ts",
              "file": "\\test\\auth.controller.test.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "can succesfully log in",
                  "fullTitle": "Auth Controller Test Login can succesfully log in",
                  "timedOut": false,
                  "duration": 111,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .post(\"/login\")\n    .send({\n    email: mockupData_1.mockup_user.email,\n    password: mockupData_1.mockup_user.password,\n})\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(200);\n    token = res.body.accessToken;\n    if (err)\n        throw err;\n    done();\n});",
                  "err": {},
                  "uuid": "960fe684-bd7d-4920-a389-96bed5e6ea8d",
                  "parentUUID": "5a57304e-8b68-4525-a71c-025040c526d1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "cannot log in with an unregistered email",
                  "fullTitle": "Auth Controller Test Login cannot log in with an unregistered email",
                  "timedOut": false,
                  "duration": 15,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .post(\"/login\")\n    .send({\n    email: \"test@mail.com\",\n    password: mockupData_1.mockup_user.password,\n})\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(400);\n    if (err)\n        throw err;\n    done();\n});",
                  "err": {},
                  "uuid": "8f46fd48-99ae-483d-91da-7ec357d11c29",
                  "parentUUID": "5a57304e-8b68-4525-a71c-025040c526d1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "cannot log in with a wrong password",
                  "fullTitle": "Auth Controller Test Login cannot log in with a wrong password",
                  "timedOut": false,
                  "duration": 107,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .post(\"/login\")\n    .send({\n    email: mockupData_1.mockup_user.email,\n    password: \"wrongPassword\",\n})\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(401);\n    if (err)\n        throw err;\n    done();\n});",
                  "err": {},
                  "uuid": "ed364d86-c546-4a56-988f-1c86103711af",
                  "parentUUID": "5a57304e-8b68-4525-a71c-025040c526d1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "960fe684-bd7d-4920-a389-96bed5e6ea8d",
                "8f46fd48-99ae-483d-91da-7ec357d11c29",
                "ed364d86-c546-4a56-988f-1c86103711af"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 233,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "ef1b8194-45ff-4e9b-b958-8ab8a2904d42",
              "title": "Reset password",
              "fullFile": "D:\\h_da\\6.Semester\\FWE\\Projekt\\learning-corner\\backend\\test\\auth.controller.test.ts",
              "file": "\\test\\auth.controller.test.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "can successfully reset the password",
                  "fullTitle": "Auth Controller Test Reset password can successfully reset the password",
                  "timedOut": false,
                  "duration": 205,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .put(\"/resetpassword\")\n    .send({\n    id: userId,\n    newPassword: \"newPassword\",\n    currentPassword: mockupData_1.mockup_user.password,\n})\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(200);\n    if (err)\n        throw err;\n    done();\n});",
                  "err": {},
                  "uuid": "c5655461-54ee-49b8-850a-8df912fa5acb",
                  "parentUUID": "ef1b8194-45ff-4e9b-b958-8ab8a2904d42",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "cannot reset the password of an unregistered user",
                  "fullTitle": "Auth Controller Test Reset password cannot reset the password of an unregistered user",
                  "timedOut": false,
                  "duration": 11,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .put(\"/resetpassword\")\n    .send({\n    id: 2,\n    newPassword: \"newPassword\",\n    currentPassword: mockupData_1.mockup_user.password,\n})\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(400);\n    if (err)\n        throw err;\n    done();\n});",
                  "err": {},
                  "uuid": "5ba7cc27-408c-4a77-bf47-aef5387e447d",
                  "parentUUID": "ef1b8194-45ff-4e9b-b958-8ab8a2904d42",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "cannot reset the password with a wrong current password",
                  "fullTitle": "Auth Controller Test Reset password cannot reset the password with a wrong current password",
                  "timedOut": false,
                  "duration": 104,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .put(\"/resetpassword\")\n    .send({\n    id: userId,\n    newPassword: \"newPassword\",\n    currentPassword: \"wrongPassword\",\n})\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(401);\n    if (err)\n        throw err;\n    done();\n});",
                  "err": {},
                  "uuid": "2926ea59-3337-4135-947b-5de2d1fc25ec",
                  "parentUUID": "ef1b8194-45ff-4e9b-b958-8ab8a2904d42",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c5655461-54ee-49b8-850a-8df912fa5acb",
                "5ba7cc27-408c-4a77-bf47-aef5387e447d",
                "2926ea59-3337-4135-947b-5de2d1fc25ec"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 320,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "015e2447-3507-44a5-83f4-ecbf831b5ddb",
          "title": "Group Controller Test",
          "fullFile": "D:\\h_da\\6.Semester\\FWE\\Projekt\\learning-corner\\backend\\test\\group.controller.test.ts",
          "file": "\\test\\group.controller.test.ts",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Group Controller Test\"",
              "fullTitle": "Group Controller Test \"before all\" hook in \"Group Controller Test\"",
              "timedOut": false,
              "duration": 307,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(\"localhost:4000\")\n    .post(\"/auth/register\")\n    .send(mockupData_1.mockup_user)\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .then((res) => {\n    userId = res.body.id;\n    (0, supertest_1.default)(\"localhost:4000\")\n        .post(\"/auth/login\")\n        .send({\n        email: mockupData_1.mockup_user.email,\n        password: mockupData_1.mockup_user.password,\n    })\n        .set(\"Accept\", \"application/json\")\n        .set(\"Content-Type\", \"application/json\")\n        .end((err, res) => {\n        token = res.body.accessToken;\n        (0, supertest_1.default)(\"localhost:4000\")\n            .post(\"/courses\")\n            .send(mockupData_1.mockup_course)\n            .set(\"Accept\", \"application/json\")\n            .set(\"Content-Type\", \"application/json\")\n            .set(\"Authorization\", token)\n            .end((err, res) => {\n            course = res.body;\n            (0, supertest_1.default)(\"localhost:4000\")\n                .put(`/users/${userId}/course/${course.id}`)\n                .set(\"Accept\", \"application/json\")\n                .set(\"Content-Type\", \"application/json\")\n                .set(\"Authorization\", token)\n                .end((err, res) => {\n                done();\n            });\n        });\n    });\n})\n    .catch((err) => {\n    throw err;\n});",
              "err": {},
              "uuid": "d4cfc4a5-0950-4325-b688-edc622dcfd28",
              "parentUUID": "015e2447-3507-44a5-83f4-ecbf831b5ddb",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before all\" hook in \"Group Controller Test\"",
              "fullTitle": "Group Controller Test \"before all\" hook in \"Group Controller Test\"",
              "timedOut": false,
              "duration": 217,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(\"localhost:4000\")\n    .post(\"/auth/register\")\n    .send(Object.assign(Object.assign({}, mockupData_1.mockup_user), { email: \"test@mail.com\" }))\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .end((err, res) => {\n    falseUserId = res.body.id;\n    (0, supertest_1.default)(\"localhost:4000\")\n        .post(\"/auth/login\")\n        .send({\n        email: \"test@mail.com\",\n        password: mockupData_1.mockup_user.password,\n    })\n        .set(\"Accept\", \"application/json\")\n        .set(\"Content-Type\", \"application/json\")\n        .end((err, res) => {\n        falseToken = res.body.accessToken;\n        if (err)\n            throw err;\n        done();\n    });\n});",
              "err": {},
              "uuid": "e4c2e265-484a-45b6-960f-f6c872ae5236",
              "parentUUID": "015e2447-3507-44a5-83f4-ecbf831b5ddb",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Group Controller Test\"",
              "fullTitle": "Group Controller Test \"after all\" hook in \"Group Controller Test\"",
              "timedOut": false,
              "duration": 25,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(\"localhost:4000/users\")\n    .delete(\"/\" + userId)\n    .set(\"Authorization\", token)\n    .end((err, res) => {\n    if (err)\n        throw err;\n    done();\n});",
              "err": {},
              "uuid": "69d858ac-caae-40bf-bc7b-1d72afbc80b3",
              "parentUUID": "015e2447-3507-44a5-83f4-ecbf831b5ddb",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after all\" hook in \"Group Controller Test\"",
              "fullTitle": "Group Controller Test \"after all\" hook in \"Group Controller Test\"",
              "timedOut": false,
              "duration": 25,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(\"localhost:4000/users\")\n    .delete(\"/\" + falseUserId)\n    .set(\"Authorization\", falseToken)\n    .end((err, res) => {\n    if (err)\n        throw err;\n    done();\n});",
              "err": {},
              "uuid": "9ae34835-11d8-4576-ac19-9fa8a68139b2",
              "parentUUID": "015e2447-3507-44a5-83f4-ecbf831b5ddb",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "105dc5f9-7b58-4eaf-829d-a7ee45c6711f",
              "title": "Create a new group",
              "fullFile": "D:\\h_da\\6.Semester\\FWE\\Projekt\\learning-corner\\backend\\test\\group.controller.test.ts",
              "file": "\\test\\group.controller.test.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "can successfully create a new group",
                  "fullTitle": "Group Controller Test Create a new group can successfully create a new group",
                  "timedOut": false,
                  "duration": 44,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .post(\"/\")\n    .send(Object.assign(Object.assign({}, mockupData_1.mockup_group), { course: course }))\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .set(\"Authorization\", token)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(201);\n    (0, chai_1.expect)(res.body.id).not.to.be.null;\n    (0, chai_1.expect)(res.body.name).to.be.equal(mockupData_1.mockup_group.name);\n    (0, chai_1.expect)(res.body.description).to.be.equal(mockupData_1.mockup_group.description);\n    group = res.body;\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                  "err": {},
                  "uuid": "9f854d30-59d0-47c7-88bf-0cb2c43a16ee",
                  "parentUUID": "105dc5f9-7b58-4eaf-829d-a7ee45c6711f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "cannot create a group without authorization",
                  "fullTitle": "Group Controller Test Create a new group cannot create a group without authorization",
                  "timedOut": false,
                  "duration": 25,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .post(\"/\")\n    .send(Object.assign(Object.assign({}, mockupData_1.mockup_group), { course: course }))\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .set(\"Authorization\", falseToken)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(401);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                  "err": {},
                  "uuid": "34d01ec2-f907-4967-90b5-1333c3f9a710",
                  "parentUUID": "105dc5f9-7b58-4eaf-829d-a7ee45c6711f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "cannot create a group in a course with an invalid id",
                  "fullTitle": "Group Controller Test Create a new group cannot create a group in a course with an invalid id",
                  "timedOut": false,
                  "duration": 20,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .post(\"/\")\n    .send(Object.assign(Object.assign({}, mockupData_1.mockup_group), { course: {\n        id: \"7\",\n    } }))\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .set(\"Authorization\", token)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(404);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                  "err": {},
                  "uuid": "401f8833-3f71-460f-9cfa-b6f28158a9c1",
                  "parentUUID": "105dc5f9-7b58-4eaf-829d-a7ee45c6711f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9f854d30-59d0-47c7-88bf-0cb2c43a16ee",
                "34d01ec2-f907-4967-90b5-1333c3f9a710",
                "401f8833-3f71-460f-9cfa-b6f28158a9c1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 89,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "3080edea-87e2-4ca6-b5dd-9608eb50e7f5",
              "title": "Get a group with the provided ID",
              "fullFile": "D:\\h_da\\6.Semester\\FWE\\Projekt\\learning-corner\\backend\\test\\group.controller.test.ts",
              "file": "\\test\\group.controller.test.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "can successfully get a group",
                  "fullTitle": "Group Controller Test Get a group with the provided ID can successfully get a group",
                  "timedOut": false,
                  "duration": 49,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .get(\"/\" + group.id)\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(200);\n    (0, chai_1.expect)(res.body.id).not.to.be.null;\n    (0, chai_1.expect)(res.body.name).to.be.equal(mockupData_1.mockup_group.name);\n    (0, chai_1.expect)(res.body.description).to.be.equal(mockupData_1.mockup_group.description);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                  "err": {},
                  "uuid": "12725003-7074-42f5-a766-d13fd4ffa564",
                  "parentUUID": "3080edea-87e2-4ca6-b5dd-9608eb50e7f5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "cannot get a group with an invalid id",
                  "fullTitle": "Group Controller Test Get a group with the provided ID cannot get a group with an invalid id",
                  "timedOut": false,
                  "duration": 11,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .get(\"/1\")\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(404);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                  "err": {},
                  "uuid": "9c4578cc-641c-42ae-90af-b7060f5786f0",
                  "parentUUID": "3080edea-87e2-4ca6-b5dd-9608eb50e7f5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "12725003-7074-42f5-a766-d13fd4ffa564",
                "9c4578cc-641c-42ae-90af-b7060f5786f0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 60,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "877dffd3-aca1-4f62-8738-cc7002785d0f",
              "title": "Update a group",
              "fullFile": "D:\\h_da\\6.Semester\\FWE\\Projekt\\learning-corner\\backend\\test\\group.controller.test.ts",
              "file": "\\test\\group.controller.test.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "can successfully update a group",
                  "fullTitle": "Group Controller Test Update a group can successfully update a group",
                  "timedOut": false,
                  "duration": 61,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .put(\"/\" + group.id)\n    .send({\n    description: \"an updated description\",\n})\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .set(\"Authorization\", token)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(200);\n    (0, chai_1.expect)(res.body.description).to.be.equal(\"an updated description\");\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                  "err": {},
                  "uuid": "43cc5469-cc9a-4adc-8781-ab1dfe5199f8",
                  "parentUUID": "877dffd3-aca1-4f62-8738-cc7002785d0f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "cannot update a group without authorization",
                  "fullTitle": "Group Controller Test Update a group cannot update a group without authorization",
                  "timedOut": false,
                  "duration": 40,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .put(\"/\" + group.id)\n    .send({\n    description: \"an updated description\",\n})\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .set(\"Authorization\", falseToken)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(401);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                  "err": {},
                  "uuid": "9258e7e1-17e8-45b1-ac19-ca290ca525d7",
                  "parentUUID": "877dffd3-aca1-4f62-8738-cc7002785d0f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "cannot update a group with an invalid id",
                  "fullTitle": "Group Controller Test Update a group cannot update a group with an invalid id",
                  "timedOut": false,
                  "duration": 23,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .put(\"/1\")\n    .send({\n    description: \"an updated description\",\n})\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .set(\"Authorization\", token)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(404);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                  "err": {},
                  "uuid": "f102e917-5114-4ef3-b15d-492650289e3d",
                  "parentUUID": "877dffd3-aca1-4f62-8738-cc7002785d0f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "43cc5469-cc9a-4adc-8781-ab1dfe5199f8",
                "9258e7e1-17e8-45b1-ac19-ca290ca525d7",
                "f102e917-5114-4ef3-b15d-492650289e3d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 124,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "858d98cb-05fe-4bf9-8751-a5f420abf1db",
              "title": "Create a section in a group",
              "fullFile": "D:\\h_da\\6.Semester\\FWE\\Projekt\\learning-corner\\backend\\test\\group.controller.test.ts",
              "file": "\\test\\group.controller.test.ts",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Create a section in a group\"",
                  "fullTitle": "Group Controller Test Create a section in a group \"before all\" hook in \"Create a section in a group\"",
                  "timedOut": false,
                  "duration": 66,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(\"localhost:4000\")\n    .put(`/users/${userId}/course/${course.id}/group/${group.id}`)\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .set(\"Authorization\", token)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(200);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                  "err": {},
                  "uuid": "c56f28d2-8a22-47fc-84ed-154ba081c643",
                  "parentUUID": "858d98cb-05fe-4bf9-8751-a5f420abf1db",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "can successfully create a section in a group",
                  "fullTitle": "Group Controller Test Create a section in a group can successfully create a section in a group",
                  "timedOut": false,
                  "duration": 63,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .post(`/${group.id}/section`)\n    .send(mockupData_1.mockup_section)\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .set(\"Authorization\", token)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(201);\n    (0, chai_1.expect)(res.body.id).not.to.be.null;\n    (0, chai_1.expect)(res.body.heading).to.be.equal(mockupData_1.mockup_section.heading);\n    (0, chai_1.expect)(res.body.description).to.be.equal(mockupData_1.mockup_section.description);\n    (0, chai_1.expect)(res.body.text).to.be.equal(mockupData_1.mockup_section.text);\n    section = res.body;\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                  "err": {},
                  "uuid": "5f640076-4277-469e-8fb3-abc8ef7d344a",
                  "parentUUID": "858d98cb-05fe-4bf9-8751-a5f420abf1db",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "cannot create a section in a group without authorization",
                  "fullTitle": "Group Controller Test Create a section in a group cannot create a section in a group without authorization",
                  "timedOut": false,
                  "duration": 36,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .post(`/${group.id}/section`)\n    .send(mockupData_1.mockup_section)\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .set(\"Authorization\", falseToken)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(401);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                  "err": {},
                  "uuid": "3e81db2f-33df-44ae-ab78-e68745125ac5",
                  "parentUUID": "858d98cb-05fe-4bf9-8751-a5f420abf1db",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "cannot create a section in a group with an invalid id",
                  "fullTitle": "Group Controller Test Create a section in a group cannot create a section in a group with an invalid id",
                  "timedOut": false,
                  "duration": 18,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .post(\"/1/section\")\n    .send(mockupData_1.mockup_section)\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .set(\"Authorization\", token)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(404);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                  "err": {},
                  "uuid": "bc5f4821-e474-41a1-92a9-4722bc3a44f4",
                  "parentUUID": "858d98cb-05fe-4bf9-8751-a5f420abf1db",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5f640076-4277-469e-8fb3-abc8ef7d344a",
                "3e81db2f-33df-44ae-ab78-e68745125ac5",
                "bc5f4821-e474-41a1-92a9-4722bc3a44f4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 117,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "07939d2f-a20e-4b21-96f0-9490fb1dcb90",
              "title": "Update a section in a group",
              "fullFile": "D:\\h_da\\6.Semester\\FWE\\Projekt\\learning-corner\\backend\\test\\group.controller.test.ts",
              "file": "\\test\\group.controller.test.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "can successfully update a section in a group",
                  "fullTitle": "Group Controller Test Update a section in a group can successfully update a section in a group",
                  "timedOut": false,
                  "duration": 66,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .put(`/${group.id}/section/${section.id}`)\n    .send({\n    heading: \"Updated Mockup Section\",\n})\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .set(\"Authorization\", token)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(200);\n    (0, chai_1.expect)(res.body.heading).to.be.equal(\"Updated Mockup Section\");\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                  "err": {},
                  "uuid": "27093667-3769-4e1e-9b58-166b9273c080",
                  "parentUUID": "07939d2f-a20e-4b21-96f0-9490fb1dcb90",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "cannot update a section in a group without authorization",
                  "fullTitle": "Group Controller Test Update a section in a group cannot update a section in a group without authorization",
                  "timedOut": false,
                  "duration": 36,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .put(`/${group.id}/section/${section.id}`)\n    .send({\n    heading: \"Updated Mockup Section\",\n})\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .set(\"Authorization\", falseToken)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(401);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                  "err": {},
                  "uuid": "661a2b4f-d1f0-45e0-b2aa-7d80848ec5be",
                  "parentUUID": "07939d2f-a20e-4b21-96f0-9490fb1dcb90",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "cannot update a section in a group with an invalid id",
                  "fullTitle": "Group Controller Test Update a section in a group cannot update a section in a group with an invalid id",
                  "timedOut": false,
                  "duration": 20,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .put(`/1/section/${section.id}`)\n    .send({\n    heading: \"Updated Mockup Section\",\n})\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .set(\"Authorization\", token)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(404);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                  "err": {},
                  "uuid": "8bd5dd24-087e-434e-a9a7-95d417558acd",
                  "parentUUID": "07939d2f-a20e-4b21-96f0-9490fb1dcb90",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "cannot update a section with an invalid id in a group",
                  "fullTitle": "Group Controller Test Update a section in a group cannot update a section with an invalid id in a group",
                  "timedOut": false,
                  "duration": 43,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .put(`/${group.id}/section/1`)\n    .send({\n    heading: \"Updated Mockup Section\",\n})\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .set(\"Authorization\", token)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(404);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                  "err": {},
                  "uuid": "2001bd91-d57f-4022-abb9-924a169769a4",
                  "parentUUID": "07939d2f-a20e-4b21-96f0-9490fb1dcb90",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "27093667-3769-4e1e-9b58-166b9273c080",
                "661a2b4f-d1f0-45e0-b2aa-7d80848ec5be",
                "8bd5dd24-087e-434e-a9a7-95d417558acd",
                "2001bd91-d57f-4022-abb9-924a169769a4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 165,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "7bd36c39-2cc0-408d-9d63-fba0c95db215",
              "title": "Delete a section in a group",
              "fullFile": "D:\\h_da\\6.Semester\\FWE\\Projekt\\learning-corner\\backend\\test\\group.controller.test.ts",
              "file": "\\test\\group.controller.test.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "can successfully delete a section in a group",
                  "fullTitle": "Group Controller Test Delete a section in a group can successfully delete a section in a group",
                  "timedOut": false,
                  "duration": 64,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .delete(`/${group.id}/section/${section.id}`)\n    .set(\"Authorization\", token)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(204);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                  "err": {},
                  "uuid": "fdad8230-4c71-4f5e-9d4d-587801e173cc",
                  "parentUUID": "7bd36c39-2cc0-408d-9d63-fba0c95db215",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "cannot delete a section in a group without authorization",
                  "fullTitle": "Group Controller Test Delete a section in a group cannot delete a section in a group without authorization",
                  "timedOut": false,
                  "duration": 29,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .delete(`/${group.id}/section/${section.id}`)\n    .set(\"Authorization\", falseToken)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(401);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                  "err": {},
                  "uuid": "a07118f5-07fd-49ef-961f-79e69053bc42",
                  "parentUUID": "7bd36c39-2cc0-408d-9d63-fba0c95db215",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "cannot delete a section in a group with an invalid id",
                  "fullTitle": "Group Controller Test Delete a section in a group cannot delete a section in a group with an invalid id",
                  "timedOut": false,
                  "duration": 15,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .delete(`/1/section/${section.id}`)\n    .set(\"Authorization\", token)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(404);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                  "err": {},
                  "uuid": "963ef1f4-9538-4993-acdd-55485a8efee5",
                  "parentUUID": "7bd36c39-2cc0-408d-9d63-fba0c95db215",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "cannot delete a section with an invalid id in a group",
                  "fullTitle": "Group Controller Test Delete a section in a group cannot delete a section with an invalid id in a group",
                  "timedOut": false,
                  "duration": 39,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .delete(`/${group.id}/section/1`)\n    .set(\"Authorization\", token)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(404);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                  "err": {},
                  "uuid": "19a9bd52-7871-42d9-90dd-2fae8fefc492",
                  "parentUUID": "7bd36c39-2cc0-408d-9d63-fba0c95db215",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "fdad8230-4c71-4f5e-9d4d-587801e173cc",
                "a07118f5-07fd-49ef-961f-79e69053bc42",
                "963ef1f4-9538-4993-acdd-55485a8efee5",
                "19a9bd52-7871-42d9-90dd-2fae8fefc492"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 147,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "a23929e2-0e55-4597-8958-ffec4fbbdf81",
              "title": "Get messages",
              "fullFile": "D:\\h_da\\6.Semester\\FWE\\Projekt\\learning-corner\\backend\\test\\group.controller.test.ts",
              "file": "\\test\\group.controller.test.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "can successfully get a messages in a group",
                  "fullTitle": "Group Controller Test Get messages can successfully get a messages in a group",
                  "timedOut": false,
                  "duration": 40,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .get(`/${group.id}/message`)\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .set(\"Authorization\", token)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(200);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                  "err": {},
                  "uuid": "bf2051dd-d108-4cef-a3cf-cf8f33db763f",
                  "parentUUID": "a23929e2-0e55-4597-8958-ffec4fbbdf81",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "cannot get a messages in a group without authorization",
                  "fullTitle": "Group Controller Test Get messages cannot get a messages in a group without authorization",
                  "timedOut": false,
                  "duration": 32,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .get(`/${group.id}/message`)\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .set(\"Authorization\", falseToken)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(401);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                  "err": {},
                  "uuid": "964dc21e-1baa-47ee-9b8f-cc8052ffa47c",
                  "parentUUID": "a23929e2-0e55-4597-8958-ffec4fbbdf81",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "cannot get a messages in a group with an invalid id",
                  "fullTitle": "Group Controller Test Get messages cannot get a messages in a group with an invalid id",
                  "timedOut": false,
                  "duration": 16,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .get(\"/1/message\")\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .set(\"Authorization\", token)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(404);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                  "err": {},
                  "uuid": "6477a495-c5e9-4bd7-ac6b-b44277ab37f8",
                  "parentUUID": "a23929e2-0e55-4597-8958-ffec4fbbdf81",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "bf2051dd-d108-4cef-a3cf-cf8f33db763f",
                "964dc21e-1baa-47ee-9b8f-cc8052ffa47c",
                "6477a495-c5e9-4bd7-ac6b-b44277ab37f8"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 88,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "e8dfdb4d-841b-4f1a-b422-20cd96bac66b",
              "title": "Delete a group",
              "fullFile": "D:\\h_da\\6.Semester\\FWE\\Projekt\\learning-corner\\backend\\test\\group.controller.test.ts",
              "file": "\\test\\group.controller.test.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "cannot delete a group without authorization",
                  "fullTitle": "Group Controller Test Delete a group cannot delete a group without authorization",
                  "timedOut": false,
                  "duration": 43,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .delete(\"/\" + group.id)\n    .set(\"Authorization\", falseToken)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(401);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                  "err": {},
                  "uuid": "f679b805-427a-46c8-b423-ecb5bb229734",
                  "parentUUID": "e8dfdb4d-841b-4f1a-b422-20cd96bac66b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "cannot delete a group with an invalid id",
                  "fullTitle": "Group Controller Test Delete a group cannot delete a group with an invalid id",
                  "timedOut": false,
                  "duration": 16,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .delete(\"/1\")\n    .set(\"Authorization\", token)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(404);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                  "err": {},
                  "uuid": "1cacc845-5ce5-47f0-a865-fc78b0bc2021",
                  "parentUUID": "e8dfdb4d-841b-4f1a-b422-20cd96bac66b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "can successfully delete a group",
                  "fullTitle": "Group Controller Test Delete a group can successfully delete a group",
                  "timedOut": false,
                  "duration": 51,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .delete(\"/\" + group.id)\n    .set(\"Authorization\", token)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(204);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                  "err": {},
                  "uuid": "b9a77d0f-4803-4162-82af-c18b40fb39a2",
                  "parentUUID": "e8dfdb4d-841b-4f1a-b422-20cd96bac66b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f679b805-427a-46c8-b423-ecb5bb229734",
                "1cacc845-5ce5-47f0-a865-fc78b0bc2021",
                "b9a77d0f-4803-4162-82af-c18b40fb39a2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 110,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "test-results",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "test/reports",
        "reportFilename": "test-results"
      },
      "version": "6.2.0"
    }
  }
}