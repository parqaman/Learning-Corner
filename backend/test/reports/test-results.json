{
  "stats": {
    "suites": 9,
    "tests": 25,
    "passes": 25,
    "pending": 0,
    "failures": 0,
    "start": "2023-01-21T18:55:41.620Z",
    "end": "2023-01-21T18:55:43.369Z",
    "duration": 1749,
    "testsRegistered": 25,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "b166cedd-802a-415b-824d-25ede661f64a",
      "title": "",
      "fullFile": "D:\\h_da\\6.Semester\\FWE\\Projekt\\learning-corner\\backend\\test\\group.controller.test.ts",
      "file": "\\test\\group.controller.test.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "34986f34-c206-42df-90c1-b3df18ac71e2",
          "title": "Group Controller Test",
          "fullFile": "D:\\h_da\\6.Semester\\FWE\\Projekt\\learning-corner\\backend\\test\\group.controller.test.ts",
          "file": "\\test\\group.controller.test.ts",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Group Controller Test\"",
              "fullTitle": "Group Controller Test \"before all\" hook in \"Group Controller Test\"",
              "timedOut": false,
              "duration": 418,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(\"localhost:4000\")\n    .post(\"/auth/register\")\n    .send(mockupData_1.mockup_user)\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .then((res) => {\n    userId = res.body.id;\n    (0, supertest_1.default)(\"localhost:4000\")\n        .post(\"/auth/login\")\n        .send({\n        email: mockupData_1.mockup_user.email,\n        password: mockupData_1.mockup_user.password,\n    })\n        .set(\"Accept\", \"application/json\")\n        .set(\"Content-Type\", \"application/json\")\n        .end((err, res) => {\n        token = res.body.accessToken;\n        (0, supertest_1.default)(\"localhost:4000\")\n            .post(\"/courses\")\n            .send(mockupData_1.mockup_course)\n            .set(\"Accept\", \"application/json\")\n            .set(\"Content-Type\", \"application/json\")\n            .set(\"Authorization\", token)\n            .end((err, res) => {\n            course = res.body;\n            (0, supertest_1.default)(\"localhost:4000\")\n                .put(`/users/${userId}/course/${course.id}`)\n                .set(\"Accept\", \"application/json\")\n                .set(\"Content-Type\", \"application/json\")\n                .set(\"Authorization\", token)\n                .end((err, res) => {\n                done();\n            });\n        });\n    });\n})\n    .catch((err) => {\n    throw err;\n});",
              "err": {},
              "uuid": "4b270001-9c93-4053-a432-b409fa88b1fd",
              "parentUUID": "34986f34-c206-42df-90c1-b3df18ac71e2",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before all\" hook in \"Group Controller Test\"",
              "fullTitle": "Group Controller Test \"before all\" hook in \"Group Controller Test\"",
              "timedOut": false,
              "duration": 210,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(\"localhost:4000\")\n    .post(\"/auth/register\")\n    .send(Object.assign(Object.assign({}, mockupData_1.mockup_user), { email: \"test@mail.com\" }))\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .end((err, res) => {\n    falseUserId = res.body.id;\n    (0, supertest_1.default)(\"localhost:4000\")\n        .post(\"/auth/login\")\n        .send({\n        email: \"test@mail.com\",\n        password: mockupData_1.mockup_user.password,\n    })\n        .set(\"Accept\", \"application/json\")\n        .set(\"Content-Type\", \"application/json\")\n        .end((err, res) => {\n        falseToken = res.body.accessToken;\n        if (err)\n            throw err;\n        done();\n    });\n});",
              "err": {},
              "uuid": "998b4acb-d28b-4d95-ab82-57f418ee10f8",
              "parentUUID": "34986f34-c206-42df-90c1-b3df18ac71e2",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Group Controller Test\"",
              "fullTitle": "Group Controller Test \"after all\" hook in \"Group Controller Test\"",
              "timedOut": false,
              "duration": 29,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(\"localhost:4000/users\")\n    .delete(\"/\" + userId)\n    .set(\"Authorization\", token)\n    .end((err, res) => {\n    if (err)\n        throw err;\n    done();\n});",
              "err": {},
              "uuid": "4ad44bdd-a717-40fb-9ff0-9067edab17d3",
              "parentUUID": "34986f34-c206-42df-90c1-b3df18ac71e2",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after all\" hook in \"Group Controller Test\"",
              "fullTitle": "Group Controller Test \"after all\" hook in \"Group Controller Test\"",
              "timedOut": false,
              "duration": 20,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(\"localhost:4000/users\")\n    .delete(\"/\" + falseUserId)\n    .set(\"Authorization\", falseToken)\n    .end((err, res) => {\n    if (err)\n        throw err;\n    done();\n});",
              "err": {},
              "uuid": "8cfdf8ca-2173-4df2-b256-947bfedc8509",
              "parentUUID": "34986f34-c206-42df-90c1-b3df18ac71e2",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "cec6fe50-5ea6-45a4-ba06-cb6b9e8a221b",
              "title": "Create a new group",
              "fullFile": "D:\\h_da\\6.Semester\\FWE\\Projekt\\learning-corner\\backend\\test\\group.controller.test.ts",
              "file": "\\test\\group.controller.test.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "can successfully create a new group",
                  "fullTitle": "Group Controller Test Create a new group can successfully create a new group",
                  "timedOut": false,
                  "duration": 57,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .post(\"/\")\n    .send(Object.assign(Object.assign({}, mockupData_1.mockup_group), { course: course }))\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .set(\"Authorization\", token)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(201);\n    (0, chai_1.expect)(res.body.id).not.to.be.null;\n    (0, chai_1.expect)(res.body.name).to.be.equal(mockupData_1.mockup_group.name);\n    (0, chai_1.expect)(res.body.description).to.be.equal(mockupData_1.mockup_group.description);\n    group = res.body;\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                  "err": {},
                  "uuid": "c581422e-ef20-4f98-b368-d1e1977caa66",
                  "parentUUID": "cec6fe50-5ea6-45a4-ba06-cb6b9e8a221b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "cannot create a group in an unjoined course",
                  "fullTitle": "Group Controller Test Create a new group cannot create a group in an unjoined course",
                  "timedOut": false,
                  "duration": 35,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .post(\"/\")\n    .send(Object.assign(Object.assign({}, mockupData_1.mockup_group), { course: course }))\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .set(\"Authorization\", falseToken)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(401);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                  "err": {},
                  "uuid": "65b89679-1b13-45c3-a35a-8d77bcddaf74",
                  "parentUUID": "cec6fe50-5ea6-45a4-ba06-cb6b9e8a221b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "cannot create a group in an unknown course",
                  "fullTitle": "Group Controller Test Create a new group cannot create a group in an unknown course",
                  "timedOut": false,
                  "duration": 23,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .post(\"/\")\n    .send(Object.assign(Object.assign({}, mockupData_1.mockup_group), { course: {\n        id: \"7\",\n    } }))\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .set(\"Authorization\", token)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(404);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                  "err": {},
                  "uuid": "6f470023-5ee0-46b8-8a3d-7a400a1e8976",
                  "parentUUID": "cec6fe50-5ea6-45a4-ba06-cb6b9e8a221b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c581422e-ef20-4f98-b368-d1e1977caa66",
                "65b89679-1b13-45c3-a35a-8d77bcddaf74",
                "6f470023-5ee0-46b8-8a3d-7a400a1e8976"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 115,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "b38748b4-62d6-4f00-a27c-2b22096dc9e4",
              "title": "Get a group with the provided ID",
              "fullFile": "D:\\h_da\\6.Semester\\FWE\\Projekt\\learning-corner\\backend\\test\\group.controller.test.ts",
              "file": "\\test\\group.controller.test.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "can successfully get a group",
                  "fullTitle": "Group Controller Test Get a group with the provided ID can successfully get a group",
                  "timedOut": false,
                  "duration": 53,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .get(\"/\" + group.id)\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(200);\n    (0, chai_1.expect)(res.body.id).not.to.be.null;\n    (0, chai_1.expect)(res.body.name).to.be.equal(mockupData_1.mockup_group.name);\n    (0, chai_1.expect)(res.body.description).to.be.equal(mockupData_1.mockup_group.description);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                  "err": {},
                  "uuid": "b4a5186e-11d4-4807-8e28-a82d8f833a00",
                  "parentUUID": "b38748b4-62d6-4f00-a27c-2b22096dc9e4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "cannot get a group with an invalid id",
                  "fullTitle": "Group Controller Test Get a group with the provided ID cannot get a group with an invalid id",
                  "timedOut": false,
                  "duration": 16,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .get(\"/1\")\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(404);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                  "err": {},
                  "uuid": "5b55cab1-35af-4876-9be2-ef8324928ab8",
                  "parentUUID": "b38748b4-62d6-4f00-a27c-2b22096dc9e4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b4a5186e-11d4-4807-8e28-a82d8f833a00",
                "5b55cab1-35af-4876-9be2-ef8324928ab8"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 69,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "a6a06fd9-48ec-4ccb-a461-ca4b0fdd536b",
              "title": "Update a group",
              "fullFile": "D:\\h_da\\6.Semester\\FWE\\Projekt\\learning-corner\\backend\\test\\group.controller.test.ts",
              "file": "\\test\\group.controller.test.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "can successfully update a group",
                  "fullTitle": "Group Controller Test Update a group can successfully update a group",
                  "timedOut": false,
                  "duration": 68,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .put(\"/\" + group.id)\n    .send({\n    description: \"an updated description\",\n})\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .set(\"Authorization\", token)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(200);\n    (0, chai_1.expect)(res.body.description).to.be.equal(\"an updated description\");\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                  "err": {},
                  "uuid": "d7791d59-d0e0-4919-9209-e842820f10e9",
                  "parentUUID": "a6a06fd9-48ec-4ccb-a461-ca4b0fdd536b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "cannot update a group without authorization",
                  "fullTitle": "Group Controller Test Update a group cannot update a group without authorization",
                  "timedOut": false,
                  "duration": 42,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .put(\"/\" + group.id)\n    .send({\n    description: \"an updated description\",\n})\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .set(\"Authorization\", falseToken)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(401);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                  "err": {},
                  "uuid": "8568309d-0a0e-46d8-9b34-7f01c625a1d9",
                  "parentUUID": "a6a06fd9-48ec-4ccb-a461-ca4b0fdd536b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "cannot update a group with an invalid id",
                  "fullTitle": "Group Controller Test Update a group cannot update a group with an invalid id",
                  "timedOut": false,
                  "duration": 20,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .put(\"/1\")\n    .send({\n    description: \"an updated description\",\n})\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .set(\"Authorization\", token)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(404);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                  "err": {},
                  "uuid": "5bcee941-044d-4e71-8761-1f23e1bd5a30",
                  "parentUUID": "a6a06fd9-48ec-4ccb-a461-ca4b0fdd536b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d7791d59-d0e0-4919-9209-e842820f10e9",
                "8568309d-0a0e-46d8-9b34-7f01c625a1d9",
                "5bcee941-044d-4e71-8761-1f23e1bd5a30"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 130,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "68dbe77a-67d8-45ed-a626-cf277dd6898e",
              "title": "Create a section in a group",
              "fullFile": "D:\\h_da\\6.Semester\\FWE\\Projekt\\learning-corner\\backend\\test\\group.controller.test.ts",
              "file": "\\test\\group.controller.test.ts",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Create a section in a group\"",
                  "fullTitle": "Group Controller Test Create a section in a group \"before all\" hook in \"Create a section in a group\"",
                  "timedOut": false,
                  "duration": 67,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(\"localhost:4000\")\n    .put(`/users/${userId}/course/${course.id}/group/${group.id}`)\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .set(\"Authorization\", token)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(200);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                  "err": {},
                  "uuid": "8416841d-4103-49d5-9cb1-d769e24d3184",
                  "parentUUID": "68dbe77a-67d8-45ed-a626-cf277dd6898e",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "can successfully create a section in a group",
                  "fullTitle": "Group Controller Test Create a section in a group can successfully create a section in a group",
                  "timedOut": false,
                  "duration": 57,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .post(`/${group.id}/section`)\n    .send(mockupData_1.mockup_section)\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .set(\"Authorization\", token)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(201);\n    (0, chai_1.expect)(res.body.id).not.to.be.null;\n    (0, chai_1.expect)(res.body.heading).to.be.equal(mockupData_1.mockup_section.heading);\n    (0, chai_1.expect)(res.body.description).to.be.equal(mockupData_1.mockup_section.description);\n    (0, chai_1.expect)(res.body.text).to.be.equal(mockupData_1.mockup_section.text);\n    section = res.body;\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                  "err": {},
                  "uuid": "1b6abba0-a09d-4710-838b-0583cfde8323",
                  "parentUUID": "68dbe77a-67d8-45ed-a626-cf277dd6898e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "cannot create a section in a group without authorization",
                  "fullTitle": "Group Controller Test Create a section in a group cannot create a section in a group without authorization",
                  "timedOut": false,
                  "duration": 38,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .post(`/${group.id}/section`)\n    .send(mockupData_1.mockup_section)\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .set(\"Authorization\", falseToken)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(401);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                  "err": {},
                  "uuid": "958fbbd2-1dbc-4d9b-928c-5626044deece",
                  "parentUUID": "68dbe77a-67d8-45ed-a626-cf277dd6898e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "cannot create a section in a group with an invalid id",
                  "fullTitle": "Group Controller Test Create a section in a group cannot create a section in a group with an invalid id",
                  "timedOut": false,
                  "duration": 19,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .post(\"/1/section\")\n    .send(mockupData_1.mockup_section)\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .set(\"Authorization\", token)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(404);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                  "err": {},
                  "uuid": "b77103d6-8a0c-4c4c-82b2-2c0640114bc5",
                  "parentUUID": "68dbe77a-67d8-45ed-a626-cf277dd6898e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1b6abba0-a09d-4710-838b-0583cfde8323",
                "958fbbd2-1dbc-4d9b-928c-5626044deece",
                "b77103d6-8a0c-4c4c-82b2-2c0640114bc5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 114,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "713c7976-d1d9-4607-aa72-98556a3718d6",
              "title": "Update a section in a group",
              "fullFile": "D:\\h_da\\6.Semester\\FWE\\Projekt\\learning-corner\\backend\\test\\group.controller.test.ts",
              "file": "\\test\\group.controller.test.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "can successfully update a section in a group",
                  "fullTitle": "Group Controller Test Update a section in a group can successfully update a section in a group",
                  "timedOut": false,
                  "duration": 72,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .put(`/${group.id}/section/${section.id}`)\n    .send({\n    heading: \"Updated Mockup Section\",\n})\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .set(\"Authorization\", token)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(200);\n    (0, chai_1.expect)(res.body.heading).to.be.equal(\"Updated Mockup Section\");\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                  "err": {},
                  "uuid": "b968b413-9b67-48a1-b1c7-c0f7f8f5e478",
                  "parentUUID": "713c7976-d1d9-4607-aa72-98556a3718d6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "cannot update a section in a group without authorization",
                  "fullTitle": "Group Controller Test Update a section in a group cannot update a section in a group without authorization",
                  "timedOut": false,
                  "duration": 37,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .put(`/${group.id}/section/${section.id}`)\n    .send({\n    heading: \"Updated Mockup Section\",\n})\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .set(\"Authorization\", falseToken)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(401);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                  "err": {},
                  "uuid": "db8de1d9-6ced-4a76-bbe7-953b80cce3b2",
                  "parentUUID": "713c7976-d1d9-4607-aa72-98556a3718d6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "cannot update a section in a group with an invalid id",
                  "fullTitle": "Group Controller Test Update a section in a group cannot update a section in a group with an invalid id",
                  "timedOut": false,
                  "duration": 18,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .put(`/1/section/${section.id}`)\n    .send({\n    heading: \"Updated Mockup Section\",\n})\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .set(\"Authorization\", token)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(404);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                  "err": {},
                  "uuid": "3b70630e-6a4f-4937-9baf-b6383c06624c",
                  "parentUUID": "713c7976-d1d9-4607-aa72-98556a3718d6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "cannot update a section with an invalid id in a group",
                  "fullTitle": "Group Controller Test Update a section in a group cannot update a section with an invalid id in a group",
                  "timedOut": false,
                  "duration": 42,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .put(`/${group.id}/section/1`)\n    .send({\n    heading: \"Updated Mockup Section\",\n})\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .set(\"Authorization\", token)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(404);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                  "err": {},
                  "uuid": "83a68704-2191-4717-8b32-5053a8d3b759",
                  "parentUUID": "713c7976-d1d9-4607-aa72-98556a3718d6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b968b413-9b67-48a1-b1c7-c0f7f8f5e478",
                "db8de1d9-6ced-4a76-bbe7-953b80cce3b2",
                "3b70630e-6a4f-4937-9baf-b6383c06624c",
                "83a68704-2191-4717-8b32-5053a8d3b759"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 169,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "288d8936-6af9-4e69-9ed7-666b7b07ef7c",
              "title": "Delete a section in a group",
              "fullFile": "D:\\h_da\\6.Semester\\FWE\\Projekt\\learning-corner\\backend\\test\\group.controller.test.ts",
              "file": "\\test\\group.controller.test.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "can successfully delete a section in a group",
                  "fullTitle": "Group Controller Test Delete a section in a group can successfully delete a section in a group",
                  "timedOut": false,
                  "duration": 62,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .delete(`/${group.id}/section/${section.id}`)\n    .set(\"Authorization\", token)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(204);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                  "err": {},
                  "uuid": "06a1cbfc-3d1c-4e00-85b8-61804aa839da",
                  "parentUUID": "288d8936-6af9-4e69-9ed7-666b7b07ef7c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "cannot delete a section in a group without authorization",
                  "fullTitle": "Group Controller Test Delete a section in a group cannot delete a section in a group without authorization",
                  "timedOut": false,
                  "duration": 30,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .delete(`/${group.id}/section/${section.id}`)\n    .set(\"Authorization\", falseToken)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(401);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                  "err": {},
                  "uuid": "20f34795-d0b2-4288-82cc-521e24022263",
                  "parentUUID": "288d8936-6af9-4e69-9ed7-666b7b07ef7c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "cannot delete a section in a group with an invalid id",
                  "fullTitle": "Group Controller Test Delete a section in a group cannot delete a section in a group with an invalid id",
                  "timedOut": false,
                  "duration": 15,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .delete(`/1/section/${section.id}`)\n    .set(\"Authorization\", token)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(404);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                  "err": {},
                  "uuid": "394fd26c-9a6a-4c17-9b56-1eb5c8337f9b",
                  "parentUUID": "288d8936-6af9-4e69-9ed7-666b7b07ef7c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "cannot delete a section with an invalid id in a group",
                  "fullTitle": "Group Controller Test Delete a section in a group cannot delete a section with an invalid id in a group",
                  "timedOut": false,
                  "duration": 36,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .delete(`/${group.id}/section/1`)\n    .set(\"Authorization\", token)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(404);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                  "err": {},
                  "uuid": "6e403010-2f05-46d2-aeb6-4cf09cc2360a",
                  "parentUUID": "288d8936-6af9-4e69-9ed7-666b7b07ef7c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "06a1cbfc-3d1c-4e00-85b8-61804aa839da",
                "20f34795-d0b2-4288-82cc-521e24022263",
                "394fd26c-9a6a-4c17-9b56-1eb5c8337f9b",
                "6e403010-2f05-46d2-aeb6-4cf09cc2360a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 143,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "5b8ce423-079e-4aad-9976-07097029e909",
              "title": "Get messages",
              "fullFile": "D:\\h_da\\6.Semester\\FWE\\Projekt\\learning-corner\\backend\\test\\group.controller.test.ts",
              "file": "\\test\\group.controller.test.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "can successfully get a messages in a group",
                  "fullTitle": "Group Controller Test Get messages can successfully get a messages in a group",
                  "timedOut": false,
                  "duration": 39,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .get(`/${group.id}/message`)\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .set(\"Authorization\", token)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(200);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                  "err": {},
                  "uuid": "4f630209-05b0-43de-a068-dd70fa7bbfe3",
                  "parentUUID": "5b8ce423-079e-4aad-9976-07097029e909",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "cannot get a messages in a group without authorization",
                  "fullTitle": "Group Controller Test Get messages cannot get a messages in a group without authorization",
                  "timedOut": false,
                  "duration": 31,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .get(`/${group.id}/message`)\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .set(\"Authorization\", falseToken)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(401);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                  "err": {},
                  "uuid": "fbb3dce7-17bf-4f61-9dcf-d0f848682af6",
                  "parentUUID": "5b8ce423-079e-4aad-9976-07097029e909",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "cannot get a messages in a group with an invalid id",
                  "fullTitle": "Group Controller Test Get messages cannot get a messages in a group with an invalid id",
                  "timedOut": false,
                  "duration": 15,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .get(\"/1/message\")\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .set(\"Authorization\", token)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(404);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                  "err": {},
                  "uuid": "aa6a6db4-d071-467f-85c4-c157ee523401",
                  "parentUUID": "5b8ce423-079e-4aad-9976-07097029e909",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4f630209-05b0-43de-a068-dd70fa7bbfe3",
                "fbb3dce7-17bf-4f61-9dcf-d0f848682af6",
                "aa6a6db4-d071-467f-85c4-c157ee523401"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 85,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "20eb929e-731e-4910-be20-dcbc4cd30c7c",
              "title": "Delete a group",
              "fullFile": "D:\\h_da\\6.Semester\\FWE\\Projekt\\learning-corner\\backend\\test\\group.controller.test.ts",
              "file": "\\test\\group.controller.test.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "cannot delete a group without authorization",
                  "fullTitle": "Group Controller Test Delete a group cannot delete a group without authorization",
                  "timedOut": false,
                  "duration": 34,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .delete(\"/\" + group.id)\n    .set(\"Authorization\", falseToken)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(401);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                  "err": {},
                  "uuid": "0692956a-bf93-40bb-b246-0defadc94616",
                  "parentUUID": "20eb929e-731e-4910-be20-dcbc4cd30c7c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "cannot delete a group with an invalid id",
                  "fullTitle": "Group Controller Test Delete a group cannot delete a group with an invalid id",
                  "timedOut": false,
                  "duration": 13,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .delete(\"/1\")\n    .set(\"Authorization\", token)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(404);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                  "err": {},
                  "uuid": "7cd676c5-73b6-410e-b81e-a1a51c34f587",
                  "parentUUID": "20eb929e-731e-4910-be20-dcbc4cd30c7c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "can successfully delete a group",
                  "fullTitle": "Group Controller Test Delete a group can successfully delete a group",
                  "timedOut": false,
                  "duration": 65,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .delete(\"/\" + group.id)\n    .set(\"Authorization\", token)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(204);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                  "err": {},
                  "uuid": "7a1a7773-97d2-4e03-9e55-15cf66bf7841",
                  "parentUUID": "20eb929e-731e-4910-be20-dcbc4cd30c7c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0692956a-bf93-40bb-b246-0defadc94616",
                "7cd676c5-73b6-410e-b81e-a1a51c34f587",
                "7a1a7773-97d2-4e03-9e55-15cf66bf7841"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 112,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "test-results",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "test/reports",
        "reportFilename": "test-results"
      },
      "version": "6.2.0"
    }
  }
}