{
  "stats": {
    "suites": 34,
    "tests": 72,
    "passes": 72,
    "pending": 0,
    "failures": 0,
    "start": "2023-01-22T09:33:27.738Z",
    "end": "2023-01-22T09:33:32.156Z",
    "duration": 4418,
    "testsRegistered": 72,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "a52b8db6-1eb8-405a-beb2-328618b6fbe6",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a74eb218-317d-4894-b38f-1df1eca15363",
          "title": "Auth Controller Test",
          "fullFile": "/Users/farouqabdurrahman/Desktop/Kuliah/5. Semester/FWE/learning-corner/backend/test/auth.controller.test.ts",
          "file": "/test/auth.controller.test.ts",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Auth Controller Test\"",
              "fullTitle": "Auth Controller Test \"after all\" hook in \"Auth Controller Test\"",
              "timedOut": false,
              "duration": 31,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(\"localhost:4000/users\")\n    .delete(\"/\" + userId)\n    .set(\"Authorization\", token)\n    .end((err, res) => {\n    if (err)\n        throw err;\n    done();\n});",
              "err": {},
              "uuid": "91c7ba3f-db05-472a-a3d1-63af9384855d",
              "parentUUID": "a74eb218-317d-4894-b38f-1df1eca15363",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "55fd2e0d-b993-44aa-a5da-0bfc79ea1583",
              "title": "Register",
              "fullFile": "/Users/farouqabdurrahman/Desktop/Kuliah/5. Semester/FWE/learning-corner/backend/test/auth.controller.test.ts",
              "file": "/test/auth.controller.test.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "can successfully register a new user",
                  "fullTitle": "Auth Controller Test Register can successfully register a new user",
                  "timedOut": false,
                  "duration": 202,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .post(\"/register\")\n    .send(mockupData_1.mockup_user)\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(201);\n    (0, chai_1.expect)(res.body.id).not.to.be.null;\n    (0, chai_1.expect)(res.body.firstName).to.be.equal(mockupData_1.mockup_user.firstName);\n    (0, chai_1.expect)(res.body.lastName).to.be.equal(mockupData_1.mockup_user.lastName);\n    (0, chai_1.expect)(res.body.email).to.be.equal(mockupData_1.mockup_user.email);\n    (0, chai_1.expect)(res.body.photo).to.be.equal(mockupData_1.mockup_user.photo);\n    userId = res.body.id;\n    if (err)\n        throw err;\n    done();\n});",
                  "err": {},
                  "uuid": "2223284e-bfe7-4ba6-8358-7794131db526",
                  "parentUUID": "55fd2e0d-b993-44aa-a5da-0bfc79ea1583",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "cannot register a new user with a registered email",
                  "fullTitle": "Auth Controller Test Register cannot register a new user with a registered email",
                  "timedOut": false,
                  "duration": 113,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .post(\"/register\")\n    .send(mockupData_1.mockup_user)\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(400);\n    if (err)\n        throw err;\n    done();\n});",
                  "err": {},
                  "uuid": "6dc3295c-3f50-419f-a99f-fd3a83622d44",
                  "parentUUID": "55fd2e0d-b993-44aa-a5da-0bfc79ea1583",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2223284e-bfe7-4ba6-8358-7794131db526",
                "6dc3295c-3f50-419f-a99f-fd3a83622d44"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 315,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "777f89fe-24bf-41ba-acac-beb689b26475",
              "title": "Login",
              "fullFile": "/Users/farouqabdurrahman/Desktop/Kuliah/5. Semester/FWE/learning-corner/backend/test/auth.controller.test.ts",
              "file": "/test/auth.controller.test.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "can succesfully log in",
                  "fullTitle": "Auth Controller Test Login can succesfully log in",
                  "timedOut": false,
                  "duration": 105,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .post(\"/login\")\n    .send({\n    email: mockupData_1.mockup_user.email,\n    password: mockupData_1.mockup_user.password,\n})\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(200);\n    token = res.body.accessToken;\n    if (err)\n        throw err;\n    done();\n});",
                  "err": {},
                  "uuid": "70cb6075-a74c-45d9-ae36-035155d6f60a",
                  "parentUUID": "777f89fe-24bf-41ba-acac-beb689b26475",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "cannot log in with an unregistered email",
                  "fullTitle": "Auth Controller Test Login cannot log in with an unregistered email",
                  "timedOut": false,
                  "duration": 10,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .post(\"/login\")\n    .send({\n    email: \"test@mail.com\",\n    password: mockupData_1.mockup_user.password,\n})\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(400);\n    if (err)\n        throw err;\n    done();\n});",
                  "err": {},
                  "uuid": "e8ca1908-0c62-4df8-a0e2-2f2a5fc75a3b",
                  "parentUUID": "777f89fe-24bf-41ba-acac-beb689b26475",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "cannot log in with a wrong password",
                  "fullTitle": "Auth Controller Test Login cannot log in with a wrong password",
                  "timedOut": false,
                  "duration": 99,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .post(\"/login\")\n    .send({\n    email: mockupData_1.mockup_user.email,\n    password: \"wrongPassword\",\n})\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(401);\n    if (err)\n        throw err;\n    done();\n});",
                  "err": {},
                  "uuid": "9131b365-b178-4056-b5a8-e208af47e0a3",
                  "parentUUID": "777f89fe-24bf-41ba-acac-beb689b26475",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "70cb6075-a74c-45d9-ae36-035155d6f60a",
                "e8ca1908-0c62-4df8-a0e2-2f2a5fc75a3b",
                "9131b365-b178-4056-b5a8-e208af47e0a3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 214,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "d4189a32-d32e-41e2-8a3e-fc0a7ea443ef",
              "title": "Reset password",
              "fullFile": "/Users/farouqabdurrahman/Desktop/Kuliah/5. Semester/FWE/learning-corner/backend/test/auth.controller.test.ts",
              "file": "/test/auth.controller.test.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "can successfully reset the password",
                  "fullTitle": "Auth Controller Test Reset password can successfully reset the password",
                  "timedOut": false,
                  "duration": 211,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .put(\"/resetpassword\")\n    .send({\n    id: userId,\n    newPassword: \"newPassword\",\n    currentPassword: mockupData_1.mockup_user.password,\n})\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(200);\n    if (err)\n        throw err;\n    done();\n});",
                  "err": {},
                  "uuid": "4b5df30d-457e-4d63-b8ed-f6a0b4bac5ac",
                  "parentUUID": "d4189a32-d32e-41e2-8a3e-fc0a7ea443ef",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "cannot reset the password of an unregistered user",
                  "fullTitle": "Auth Controller Test Reset password cannot reset the password of an unregistered user",
                  "timedOut": false,
                  "duration": 10,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .put(\"/resetpassword\")\n    .send({\n    id: 2,\n    newPassword: \"newPassword\",\n    currentPassword: mockupData_1.mockup_user.password,\n})\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(400);\n    if (err)\n        throw err;\n    done();\n});",
                  "err": {},
                  "uuid": "fc1ebac4-a71c-4c23-a403-2897177a3b1b",
                  "parentUUID": "d4189a32-d32e-41e2-8a3e-fc0a7ea443ef",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "cannot reset the password with a wrong current password",
                  "fullTitle": "Auth Controller Test Reset password cannot reset the password with a wrong current password",
                  "timedOut": false,
                  "duration": 101,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .put(\"/resetpassword\")\n    .send({\n    id: userId,\n    newPassword: \"newPassword\",\n    currentPassword: \"wrongPassword\",\n})\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(401);\n    if (err)\n        throw err;\n    done();\n});",
                  "err": {},
                  "uuid": "7a00f524-75da-4c9a-a007-9ae6d21b31b6",
                  "parentUUID": "d4189a32-d32e-41e2-8a3e-fc0a7ea443ef",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4b5df30d-457e-4d63-b8ed-f6a0b4bac5ac",
                "fc1ebac4-a71c-4c23-a403-2897177a3b1b",
                "7a00f524-75da-4c9a-a007-9ae6d21b31b6"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 322,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4832bda2-d226-48d7-b6d9-377f19a70594",
          "title": "Course Controller Test",
          "fullFile": "/Users/farouqabdurrahman/Desktop/Kuliah/5. Semester/FWE/learning-corner/backend/test/course.controller.test.ts",
          "file": "/test/course.controller.test.ts",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Course Controller Test\"",
              "fullTitle": "Course Controller Test \"before all\" hook in \"Course Controller Test\"",
              "timedOut": false,
              "duration": 422,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//create user 1 acc\n(0, supertest_1.default)(\"localhost:4000\")\n    .post(\"/auth/register\")\n    .send(mockupData_1.mockup_user)\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .then((res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(201);\n    userID = res.body.id;\n    //create user 2 acc\n    (0, supertest_1.default)(\"localhost:4000\")\n        .post(\"/auth/register\")\n        .send(mockupData_1.mockup_user_2)\n        .set(\"Accept\", \"application/json\")\n        .set(\"Content-Type\", \"application/json\")\n        .then((res2) => {\n        (0, chai_1.expect)(res2.statusCode).to.be.equal(201);\n        userID_2 = res2.body.id;\n        //login user 1\n        (0, supertest_1.default)(\"localhost:4000\")\n            .post(\"/auth/login\")\n            .send({\n            email: mockupData_1.mockup_user.email,\n            password: mockupData_1.mockup_user.password,\n        })\n            .set(\"Accept\", \"application/json\")\n            .set(\"Content-Type\", \"application/json\")\n            .then((res3) => {\n            (0, chai_1.expect)(res3.statusCode).to.be.equal(200);\n            token = res3.body.accessToken;\n            //login user 2\n            (0, supertest_1.default)(\"localhost:4000\")\n                .post(\"/auth/login\")\n                .send({\n                email: mockupData_1.mockup_user_2.email,\n                password: mockupData_1.mockup_user_2.password,\n            })\n                .set(\"Accept\", \"application/json\")\n                .set(\"Content-Type\", \"application/json\")\n                .end((err, res4) => {\n                (0, chai_1.expect)(res4.statusCode).to.be.equal(200);\n                token_2 = res4.body.accessToken;\n                if (err) {\n                    throw err;\n                }\n                done();\n            });\n        });\n    });\n})\n    .catch((err) => {\n    throw err;\n});",
              "err": {},
              "uuid": "7578bb74-6771-4f53-a1cd-357e709db4b1",
              "parentUUID": "4832bda2-d226-48d7-b6d9-377f19a70594",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Course Controller Test\"",
              "fullTitle": "Course Controller Test \"after all\" hook in \"Course Controller Test\"",
              "timedOut": false,
              "duration": 37,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(\"localhost:4000/users\")\n    .delete(\"/\" + userID)\n    .set(\"Authorization\", token)\n    .then((res) => {\n    (0, supertest_1.default)(\"localhost:4000/users\")\n        .delete(\"/\" + userID_2)\n        .set(\"Authorization\", token_2)\n        .end((err, res) => {\n        if (err)\n            throw err;\n        done();\n    });\n});",
              "err": {},
              "uuid": "6d9c66aa-1260-4059-8c8b-23851f3a68d6",
              "parentUUID": "4832bda2-d226-48d7-b6d9-377f19a70594",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "139b8003-cbcd-46da-9f06-31aae5804885",
              "title": "Course CRUD test",
              "fullFile": "/Users/farouqabdurrahman/Desktop/Kuliah/5. Semester/FWE/learning-corner/backend/test/course.controller.test.ts",
              "file": "/test/course.controller.test.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "7ed6e495-c218-4a39-ad68-8be45f2f7301",
                  "title": "Create a new course",
                  "fullFile": "/Users/farouqabdurrahman/Desktop/Kuliah/5. Semester/FWE/learning-corner/backend/test/course.controller.test.ts",
                  "file": "/test/course.controller.test.ts",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Can create a new course",
                      "fullTitle": "Course Controller Test Course CRUD test Create a new course Can create a new course",
                      "timedOut": false,
                      "duration": 28,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "(0, supertest_1.default)(rootURL)\n    .post(\"/\")\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', token)\n    .send(mockupData_1.mockup_course)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(201);\n    (0, chai_1.expect)(res.body.id).to.be.not.null;\n    if (err) {\n        throw err;\n    }\n    localCourse = res.body;\n    done();\n});",
                      "err": {},
                      "uuid": "77d5b99c-22af-4c83-ba54-60b375b5a9e3",
                      "parentUUID": "7ed6e495-c218-4a39-ad68-8be45f2f7301",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "Cannot create a new course with an existing course name",
                      "fullTitle": "Course Controller Test Course CRUD test Create a new course Cannot create a new course with an existing course name",
                      "timedOut": false,
                      "duration": 15,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "(0, supertest_1.default)(rootURL)\n    .post(\"/\")\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', token)\n    .send(mockupData_1.mockup_course)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(409);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                      "err": {},
                      "uuid": "2ef9d0eb-6149-406d-9f28-24e9e74103d4",
                      "parentUUID": "7ed6e495-c218-4a39-ad68-8be45f2f7301",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "77d5b99c-22af-4c83-ba54-60b375b5a9e3",
                    "2ef9d0eb-6149-406d-9f28-24e9e74103d4"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 43,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                },
                {
                  "uuid": "e5916551-eca8-4160-925d-5c648500ff4a",
                  "title": "Read a course",
                  "fullFile": "/Users/farouqabdurrahman/Desktop/Kuliah/5. Semester/FWE/learning-corner/backend/test/course.controller.test.ts",
                  "file": "/test/course.controller.test.ts",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Can read an existing course",
                      "fullTitle": "Course Controller Test Course CRUD test Read a course Can read an existing course",
                      "timedOut": false,
                      "duration": 37,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "(0, supertest_1.default)(rootURL)\n    .get(\"/\" + localCourse.id)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', token)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(200);\n    (0, chai_1.expect)(res.body.id).to.be.equal(localCourse.id);\n    (0, chai_1.expect)(res.body.name).to.be.equal(mockupData_1.mockup_course.name);\n    (0, chai_1.expect)(res.body.description).to.be.equal(mockupData_1.mockup_course.description);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                      "err": {},
                      "uuid": "1dd4da72-824a-4872-96c7-98114962998e",
                      "parentUUID": "e5916551-eca8-4160-925d-5c648500ff4a",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "1dd4da72-824a-4872-96c7-98114962998e"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 37,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                },
                {
                  "uuid": "77865f2b-5713-4867-bacc-6b1b5e869428",
                  "title": "Update a course",
                  "fullFile": "/Users/farouqabdurrahman/Desktop/Kuliah/5. Semester/FWE/learning-corner/backend/test/course.controller.test.ts",
                  "file": "/test/course.controller.test.ts",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Can update an existing course",
                      "fullTitle": "Course Controller Test Course CRUD test Update a course Can update an existing course",
                      "timedOut": false,
                      "duration": 30,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var newCourseName = \"New test course \";\nvar newCourseDesc = \"This is a new description\";\n(0, supertest_1.default)(rootURL)\n    .put(\"/\" + localCourse.id)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', token)\n    .send({\n    name: newCourseName,\n    description: newCourseDesc\n})\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(200);\n    (0, chai_1.expect)(res.body.id).to.be.equal(localCourse.id);\n    (0, chai_1.expect)(res.body.name).to.be.equal(newCourseName);\n    (0, chai_1.expect)(res.body.description).to.be.equal(newCourseDesc);\n    (0, chai_1.expect)(res.body.lecturer).to.be.equal(userID);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                      "err": {},
                      "uuid": "0362df23-d7cc-4c67-b5be-f85a09bb66ed",
                      "parentUUID": "77865f2b-5713-4867-bacc-6b1b5e869428",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "Cannot update other person's course",
                      "fullTitle": "Course Controller Test Course CRUD test Update a course Cannot update other person's course",
                      "timedOut": false,
                      "duration": 13,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var newCourseName = \"New test course \";\nvar newCourseDesc = \"This is a new description\";\n(0, supertest_1.default)(rootURL)\n    .put(\"/\" + localCourse.id)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', token_2)\n    .send({\n    name: newCourseName,\n    description: newCourseDesc\n})\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(401);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                      "err": {},
                      "uuid": "ef53ed30-7022-4b79-b5f9-11b8734e0aca",
                      "parentUUID": "77865f2b-5713-4867-bacc-6b1b5e869428",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "0362df23-d7cc-4c67-b5be-f85a09bb66ed",
                    "ef53ed30-7022-4b79-b5f9-11b8734e0aca"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 43,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                },
                {
                  "uuid": "3bd31404-31fa-4e97-b41e-0f82e7dd033e",
                  "title": "Delete a course",
                  "fullFile": "/Users/farouqabdurrahman/Desktop/Kuliah/5. Semester/FWE/learning-corner/backend/test/course.controller.test.ts",
                  "file": "/test/course.controller.test.ts",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Cannot delete an other person's course",
                      "fullTitle": "Course Controller Test Course CRUD test Delete a course Cannot delete an other person's course",
                      "timedOut": false,
                      "duration": 19,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "(0, supertest_1.default)(rootURL)\n    .delete(\"/\" + localCourse.id)\n    .set('Authorization', token_2)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(401);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                      "err": {},
                      "uuid": "499fe271-97d3-4c59-8552-633ffddecc7f",
                      "parentUUID": "3bd31404-31fa-4e97-b41e-0f82e7dd033e",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "Can delete an existing course",
                      "fullTitle": "Course Controller Test Course CRUD test Delete a course Can delete an existing course",
                      "timedOut": false,
                      "duration": 32,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "(0, supertest_1.default)(rootURL)\n    .delete(\"/\" + localCourse.id)\n    .set('Authorization', token)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(204);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                      "err": {},
                      "uuid": "3eeaa1d9-5ef6-4646-ad0b-2a8fe6fc864a",
                      "parentUUID": "3bd31404-31fa-4e97-b41e-0f82e7dd033e",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "499fe271-97d3-4c59-8552-633ffddecc7f",
                    "3eeaa1d9-5ef6-4646-ad0b-2a8fe6fc864a"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 51,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "498f7350-8ebf-4c5c-8771-42e023cd271a",
              "title": "Section in a Course CRUD test",
              "fullFile": "/Users/farouqabdurrahman/Desktop/Kuliah/5. Semester/FWE/learning-corner/backend/test/course.controller.test.ts",
              "file": "/test/course.controller.test.ts",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Section in a Course CRUD test\"",
                  "fullTitle": "Course Controller Test Section in a Course CRUD test \"before all\" hook in \"Section in a Course CRUD test\"",
                  "timedOut": false,
                  "duration": 29,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(rootURL)\n    .post(\"/\")\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', token)\n    .send(mockupData_1.mockup_course)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(201);\n    (0, chai_1.expect)(res.body.id).to.be.not.null;\n    if (err) {\n        throw err;\n    }\n    localCourse = res.body;\n    done();\n});",
                  "err": {},
                  "uuid": "e41f6ab3-2e7d-44a0-9827-abdbe100ac6a",
                  "parentUUID": "498f7350-8ebf-4c5c-8771-42e023cd271a",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "d01900f2-b980-442a-9b6c-b163e2d856a3",
                  "title": "Create a new section",
                  "fullFile": "/Users/farouqabdurrahman/Desktop/Kuliah/5. Semester/FWE/learning-corner/backend/test/course.controller.test.ts",
                  "file": "/test/course.controller.test.ts",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Can create a new section in a course",
                      "fullTitle": "Course Controller Test Section in a Course CRUD test Create a new section Can create a new section in a course",
                      "timedOut": false,
                      "duration": 32,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "(0, supertest_1.default)(rootURL)\n    .post(\"/\" + localCourse.id + \"/section\")\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', token)\n    .send(Object.assign(Object.assign({}, mockupData_1.mockup_section), { course: localCourse }))\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(201);\n    (0, chai_1.expect)(res.body.id).to.be.not.null;\n    if (err) {\n        throw err;\n    }\n    localSection = res.body;\n    done();\n});",
                      "err": {},
                      "uuid": "8a4a41c5-a345-4c19-b499-90cf21aa5f0d",
                      "parentUUID": "d01900f2-b980-442a-9b6c-b163e2d856a3",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "Can not create a new section in an unexisting course",
                      "fullTitle": "Course Controller Test Section in a Course CRUD test Create a new section Can not create a new section in an unexisting course",
                      "timedOut": false,
                      "duration": 11,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "(0, supertest_1.default)(rootURL)\n    .post(\"/\" + \"invalid-course-id\" + \"/section\")\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', token)\n    .send(mockupData_1.mockup_section)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(404);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                      "err": {},
                      "uuid": "ac6f6d12-820c-47b8-8aa1-18356a414e47",
                      "parentUUID": "d01900f2-b980-442a-9b6c-b163e2d856a3",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "Can not create a new section in other person's course",
                      "fullTitle": "Course Controller Test Section in a Course CRUD test Create a new section Can not create a new section in other person's course",
                      "timedOut": false,
                      "duration": 12,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "(0, supertest_1.default)(rootURL)\n    .post(\"/\" + localCourse.id + \"/section\")\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', token_2)\n    .send(mockupData_1.mockup_section)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(401);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                      "err": {},
                      "uuid": "ce9fe77b-4fa9-4d18-a724-04289d3f30f1",
                      "parentUUID": "d01900f2-b980-442a-9b6c-b163e2d856a3",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "8a4a41c5-a345-4c19-b499-90cf21aa5f0d",
                    "ac6f6d12-820c-47b8-8aa1-18356a414e47",
                    "ce9fe77b-4fa9-4d18-a724-04289d3f30f1"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 55,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                },
                {
                  "uuid": "963245c6-af21-4963-837d-88736eec5ec7",
                  "title": "Update a section",
                  "fullFile": "/Users/farouqabdurrahman/Desktop/Kuliah/5. Semester/FWE/learning-corner/backend/test/course.controller.test.ts",
                  "file": "/test/course.controller.test.ts",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Can update an existing section in a course",
                      "fullTitle": "Course Controller Test Section in a Course CRUD test Update a section Can update an existing section in a course",
                      "timedOut": false,
                      "duration": 30,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var newSectionName = \"New test section \";\nvar newSectionDesc = \"This is a new description\";\n(0, supertest_1.default)(rootURL)\n    .put(\"/\" + localCourse.id + \"/section/\" + localSection.id)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', token)\n    .send({\n    heading: newSectionName,\n    description: newSectionDesc\n})\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(200);\n    (0, chai_1.expect)(res.body.heading).to.be.equal(newSectionName);\n    (0, chai_1.expect)(res.body.description).to.be.equal(newSectionDesc);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                      "err": {},
                      "uuid": "c02d8629-b6d5-4043-89e8-ce4dbc68e343",
                      "parentUUID": "963245c6-af21-4963-837d-88736eec5ec7",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "Cannot update a section in other person's course",
                      "fullTitle": "Course Controller Test Section in a Course CRUD test Update a section Cannot update a section in other person's course",
                      "timedOut": false,
                      "duration": 12,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var newSectionName = \"New test section \";\nvar newSectionDesc = \"This is a new description\";\n(0, supertest_1.default)(rootURL)\n    .put(\"/\" + localCourse.id + \"/section/\" + localSection.id)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', token_2)\n    .send({\n    heading: newSectionName,\n    description: newSectionDesc\n})\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(401);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                      "err": {},
                      "uuid": "8498899f-af63-4ed2-afe8-d4cbbeb66331",
                      "parentUUID": "963245c6-af21-4963-837d-88736eec5ec7",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "c02d8629-b6d5-4043-89e8-ce4dbc68e343",
                    "8498899f-af63-4ed2-afe8-d4cbbeb66331"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 42,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                },
                {
                  "uuid": "486638b9-af71-404a-8f7c-fd76ab89bbd6",
                  "title": "Delete a section",
                  "fullFile": "/Users/farouqabdurrahman/Desktop/Kuliah/5. Semester/FWE/learning-corner/backend/test/course.controller.test.ts",
                  "file": "/test/course.controller.test.ts",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Cannot delete a section in other person's course",
                      "fullTitle": "Course Controller Test Section in a Course CRUD test Delete a section Cannot delete a section in other person's course",
                      "timedOut": false,
                      "duration": 12,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "(0, supertest_1.default)(rootURL)\n    .delete(\"/\" + localCourse.id + \"/section/\" + localSection.id)\n    .set('Authorization', token_2)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(401);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                      "err": {},
                      "uuid": "b695e711-40ee-425d-bed2-8fb49fe8f089",
                      "parentUUID": "486638b9-af71-404a-8f7c-fd76ab89bbd6",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "Can delete an existing section in a  course",
                      "fullTitle": "Course Controller Test Section in a Course CRUD test Delete a section Can delete an existing section in a  course",
                      "timedOut": false,
                      "duration": 31,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "(0, supertest_1.default)(rootURL)\n    .delete(\"/\" + localCourse.id + \"/section/\" + localSection.id)\n    .set('Authorization', token)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(204);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                      "err": {},
                      "uuid": "8ae02020-001d-42e1-81a7-be77c4c05f2d",
                      "parentUUID": "486638b9-af71-404a-8f7c-fd76ab89bbd6",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "b695e711-40ee-425d-bed2-8fb49fe8f089",
                    "8ae02020-001d-42e1-81a7-be77c4c05f2d"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 43,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "48d204bf-eb21-4fcd-bb3c-05e46a6c305a",
              "title": "Chat messages in a course test",
              "fullFile": "/Users/farouqabdurrahman/Desktop/Kuliah/5. Semester/FWE/learning-corner/backend/test/course.controller.test.ts",
              "file": "/test/course.controller.test.ts",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Chat messages in a course test\"",
                  "fullTitle": "Course Controller Test Chat messages in a course test \"before all\" hook in \"Chat messages in a course test\"",
                  "timedOut": false,
                  "duration": 31,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(\"localhost:4000\")\n    .put(`/users/${userID}/course/${localCourse.id}`)\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .set(\"Authorization\", token)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(200);\n    done();\n});",
                  "err": {},
                  "uuid": "5badc74d-7519-4e98-badd-bd6d69dcfffd",
                  "parentUUID": "48d204bf-eb21-4fcd-bb3c-05e46a6c305a",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Can sucessfully read messages that belongs to a course",
                  "fullTitle": "Course Controller Test Chat messages in a course test Can sucessfully read messages that belongs to a course",
                  "timedOut": false,
                  "duration": 21,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(rootURL)\n    .get(\"/\" + localCourse.id + \"/message\")\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', token)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(200);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                  "err": {},
                  "uuid": "9b854e3f-a048-4133-bf7f-2c18d6c4fbff",
                  "parentUUID": "48d204bf-eb21-4fcd-bb3c-05e46a6c305a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Cannot read messages that belongs to a course he/she did not join",
                  "fullTitle": "Course Controller Test Chat messages in a course test Cannot read messages that belongs to a course he/she did not join",
                  "timedOut": false,
                  "duration": 16,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(rootURL)\n    .get(\"/\" + localCourse.id + \"/message\")\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', token_2)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(401);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                  "err": {},
                  "uuid": "05c4b5a3-7aea-4198-bb47-78e3387cc6bb",
                  "parentUUID": "48d204bf-eb21-4fcd-bb3c-05e46a6c305a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9b854e3f-a048-4133-bf7f-2c18d6c4fbff",
                "05c4b5a3-7aea-4198-bb47-78e3387cc6bb"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 37,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "aec56726-85e1-42f7-bb16-2accd98b8711",
          "title": "Upload Controller Test",
          "fullFile": "/Users/farouqabdurrahman/Desktop/Kuliah/5. Semester/FWE/learning-corner/backend/test/fileHandling.controller.test.ts",
          "file": "/test/fileHandling.controller.test.ts",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Upload Controller Test\"",
              "fullTitle": "Upload Controller Test \"before all\" hook in \"Upload Controller Test\"",
              "timedOut": false,
              "duration": 249,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//create user acc\n(0, supertest_1.default)(\"localhost:4000\")\n    .post(\"/auth/register\")\n    .send(mockupData_1.mockup_user)\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .then((res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(201);\n    user = res.body;\n    //login user\n    (0, supertest_1.default)(\"localhost:4000\")\n        .post(\"/auth/login\")\n        .send({\n        email: mockupData_1.mockup_user.email,\n        password: mockupData_1.mockup_user.password,\n    })\n        .set(\"Accept\", \"application/json\")\n        .set(\"Content-Type\", \"application/json\")\n        .then((res2) => {\n        (0, chai_1.expect)(res2.statusCode).to.be.equal(200);\n        token = res2.body.accessToken;\n        //create a course\n        (0, supertest_1.default)(\"localhost:4000\")\n            .post(\"/courses\")\n            .set('Accept', 'application/json')\n            .set('Content-Type', 'application/json')\n            .set('Authorization', token)\n            .send(mockupData_1.mockup_course)\n            .then((res3) => {\n            (0, chai_1.expect)(res3.statusCode).to.be.equal(201);\n            course = res3.body;\n            //create a section in the course\n            (0, supertest_1.default)(\"localhost:4000/courses\")\n                .post(\"/\" + course.id + \"/section\")\n                .set('Accept', 'application/json')\n                .set('Content-Type', 'application/json')\n                .set('Authorization', token)\n                .send(Object.assign(Object.assign({}, mockupData_1.mockup_section), { course: course }))\n                .end((err, res) => {\n                (0, chai_1.expect)(res.statusCode).to.be.equal(201);\n                if (err) {\n                    throw err;\n                }\n                section = res.body;\n                done();\n            });\n        });\n    });\n})\n    .catch((err) => {\n    throw err;\n});",
              "err": {},
              "uuid": "d179f5ae-24d3-49b0-894a-29b9565b5032",
              "parentUUID": "aec56726-85e1-42f7-bb16-2accd98b8711",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Upload Controller Test\"",
              "fullTitle": "Upload Controller Test \"after all\" hook in \"Upload Controller Test\"",
              "timedOut": false,
              "duration": 19,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(\"localhost:4000/users\")\n    .delete(\"/\" + user.id)\n    .set(\"Authorization\", token)\n    .end((err, res) => {\n    //cleaning up file\n    fs_1.default.unlink(path_1.default.resolve() + `/upload/files/${section.id}/profile_empty.png`, (err) => {\n        if (err)\n            throw err;\n    });\n    //cleaning up directory of file\n    fs_1.default.rmdir(path_1.default.resolve() + `/upload/files/${section.id}`, (err) => {\n        if (err)\n            throw err;\n    });\n    if (err)\n        throw err;\n    done();\n});",
              "err": {},
              "uuid": "27a8b090-edf7-473c-8619-5fefbe17b59a",
              "parentUUID": "aec56726-85e1-42f7-bb16-2accd98b8711",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "b47a6b8e-1b5d-4397-96ac-30770d560d9e",
              "title": "Create a new file",
              "fullFile": "/Users/farouqabdurrahman/Desktop/Kuliah/5. Semester/FWE/learning-corner/backend/test/fileHandling.controller.test.ts",
              "file": "/test/fileHandling.controller.test.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Can create (upload) a new file",
                  "fullTitle": "Upload Controller Test Create a new file Can create (upload) a new file",
                  "timedOut": false,
                  "duration": 55,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(rootURL)\n    .post(`/${section.id}/file`)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', token)\n    .attach('empty profile img', pathToFile)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(200);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                  "err": {},
                  "uuid": "f82f7054-8a5e-49ac-b8fe-8ae6981e838f",
                  "parentUUID": "b47a6b8e-1b5d-4397-96ac-30770d560d9e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f82f7054-8a5e-49ac-b8fe-8ae6981e838f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 55,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "20995319-eeff-43a8-8834-5e9ed41f930f",
          "title": "Group Controller Test",
          "fullFile": "/Users/farouqabdurrahman/Desktop/Kuliah/5. Semester/FWE/learning-corner/backend/test/group.controller.test.ts",
          "file": "/test/group.controller.test.ts",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Group Controller Test\"",
              "fullTitle": "Group Controller Test \"before all\" hook in \"Group Controller Test\"",
              "timedOut": false,
              "duration": 253,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(\"localhost:4000\")\n    .post(\"/auth/register\")\n    .send(mockupData_1.mockup_user)\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .then((res) => {\n    userId = res.body.id;\n    (0, supertest_1.default)(\"localhost:4000\")\n        .post(\"/auth/login\")\n        .send({\n        email: mockupData_1.mockup_user.email,\n        password: mockupData_1.mockup_user.password,\n    })\n        .set(\"Accept\", \"application/json\")\n        .set(\"Content-Type\", \"application/json\")\n        .end((err, res) => {\n        token = res.body.accessToken;\n        (0, supertest_1.default)(\"localhost:4000\")\n            .post(\"/courses\")\n            .send(mockupData_1.mockup_course)\n            .set(\"Accept\", \"application/json\")\n            .set(\"Content-Type\", \"application/json\")\n            .set(\"Authorization\", token)\n            .end((err, res) => {\n            course = res.body;\n            (0, supertest_1.default)(\"localhost:4000\")\n                .put(`/users/${userId}/course/${course.id}`)\n                .set(\"Accept\", \"application/json\")\n                .set(\"Content-Type\", \"application/json\")\n                .set(\"Authorization\", token)\n                .end((err, res) => {\n                done();\n            });\n        });\n    });\n})\n    .catch((err) => {\n    throw err;\n});",
              "err": {},
              "uuid": "77eb473c-0446-4536-bef6-d518fcb4769d",
              "parentUUID": "20995319-eeff-43a8-8834-5e9ed41f930f",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before all\" hook in \"Group Controller Test\"",
              "fullTitle": "Group Controller Test \"before all\" hook in \"Group Controller Test\"",
              "timedOut": false,
              "duration": 204,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(\"localhost:4000\")\n    .post(\"/auth/register\")\n    .send(Object.assign(Object.assign({}, mockupData_1.mockup_user), { email: \"test@mail.com\" }))\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .end((err, res) => {\n    falseUserId = res.body.id;\n    (0, supertest_1.default)(\"localhost:4000\")\n        .post(\"/auth/login\")\n        .send({\n        email: \"test@mail.com\",\n        password: mockupData_1.mockup_user.password,\n    })\n        .set(\"Accept\", \"application/json\")\n        .set(\"Content-Type\", \"application/json\")\n        .end((err, res) => {\n        falseToken = res.body.accessToken;\n        if (err)\n            throw err;\n        done();\n    });\n});",
              "err": {},
              "uuid": "5594b27a-2869-4fc3-905b-40a5a5ceba46",
              "parentUUID": "20995319-eeff-43a8-8834-5e9ed41f930f",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Group Controller Test\"",
              "fullTitle": "Group Controller Test \"after all\" hook in \"Group Controller Test\"",
              "timedOut": false,
              "duration": 28,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(\"localhost:4000/users\")\n    .delete(\"/\" + userId)\n    .set(\"Authorization\", token)\n    .end((err, res) => {\n    if (err)\n        throw err;\n    done();\n});",
              "err": {},
              "uuid": "5fd17e4a-779b-4a13-b81f-baa050f8f7e7",
              "parentUUID": "20995319-eeff-43a8-8834-5e9ed41f930f",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after all\" hook in \"Group Controller Test\"",
              "fullTitle": "Group Controller Test \"after all\" hook in \"Group Controller Test\"",
              "timedOut": false,
              "duration": 21,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(\"localhost:4000/users\")\n    .delete(\"/\" + falseUserId)\n    .set(\"Authorization\", falseToken)\n    .end((err, res) => {\n    if (err)\n        throw err;\n    done();\n});",
              "err": {},
              "uuid": "612cfd3a-25b3-4b6e-8f52-07f77ed3bdc3",
              "parentUUID": "20995319-eeff-43a8-8834-5e9ed41f930f",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "5a0b0077-8d8d-4360-8536-9c7f0d3f599f",
              "title": "Create a new group",
              "fullFile": "/Users/farouqabdurrahman/Desktop/Kuliah/5. Semester/FWE/learning-corner/backend/test/group.controller.test.ts",
              "file": "/test/group.controller.test.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "can successfully create a new group",
                  "fullTitle": "Group Controller Test Create a new group can successfully create a new group",
                  "timedOut": false,
                  "duration": 30,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .post(\"/\")\n    .send(Object.assign(Object.assign({}, mockupData_1.mockup_group), { course: course }))\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .set(\"Authorization\", token)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(201);\n    (0, chai_1.expect)(res.body.id).not.to.be.null;\n    (0, chai_1.expect)(res.body.name).to.be.equal(mockupData_1.mockup_group.name);\n    (0, chai_1.expect)(res.body.description).to.be.equal(mockupData_1.mockup_group.description);\n    group = res.body;\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                  "err": {},
                  "uuid": "669032e5-f874-400f-89b1-943bc2537964",
                  "parentUUID": "5a0b0077-8d8d-4360-8536-9c7f0d3f599f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "cannot create a group without authorization",
                  "fullTitle": "Group Controller Test Create a new group cannot create a group without authorization",
                  "timedOut": false,
                  "duration": 16,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .post(\"/\")\n    .send(Object.assign(Object.assign({}, mockupData_1.mockup_group), { course: course }))\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .set(\"Authorization\", falseToken)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(401);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                  "err": {},
                  "uuid": "0d289d82-f37d-42fe-8740-8153bed312c1",
                  "parentUUID": "5a0b0077-8d8d-4360-8536-9c7f0d3f599f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "cannot create a group in a course with an invalid id",
                  "fullTitle": "Group Controller Test Create a new group cannot create a group in a course with an invalid id",
                  "timedOut": false,
                  "duration": 11,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .post(\"/\")\n    .send(Object.assign(Object.assign({}, mockupData_1.mockup_group), { course: {\n        id: \"7\",\n    } }))\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .set(\"Authorization\", token)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(404);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                  "err": {},
                  "uuid": "c1323082-1581-4837-8eec-586e9d83ab41",
                  "parentUUID": "5a0b0077-8d8d-4360-8536-9c7f0d3f599f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "669032e5-f874-400f-89b1-943bc2537964",
                "0d289d82-f37d-42fe-8740-8153bed312c1",
                "c1323082-1581-4837-8eec-586e9d83ab41"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 57,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "633e4317-70c2-4c70-8064-2ff5a5712aa7",
              "title": "Get a group by ID",
              "fullFile": "/Users/farouqabdurrahman/Desktop/Kuliah/5. Semester/FWE/learning-corner/backend/test/group.controller.test.ts",
              "file": "/test/group.controller.test.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "can successfully get a group",
                  "fullTitle": "Group Controller Test Get a group by ID can successfully get a group",
                  "timedOut": false,
                  "duration": 24,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .get(\"/\" + group.id)\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(200);\n    (0, chai_1.expect)(res.body.id).not.to.be.null;\n    (0, chai_1.expect)(res.body.name).to.be.equal(mockupData_1.mockup_group.name);\n    (0, chai_1.expect)(res.body.description).to.be.equal(mockupData_1.mockup_group.description);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                  "err": {},
                  "uuid": "38ea74d3-aa08-40d1-93d6-9b56af413bca",
                  "parentUUID": "633e4317-70c2-4c70-8064-2ff5a5712aa7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "cannot get a group with an invalid id",
                  "fullTitle": "Group Controller Test Get a group by ID cannot get a group with an invalid id",
                  "timedOut": false,
                  "duration": 7,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .get(\"/1\")\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(404);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                  "err": {},
                  "uuid": "c9ac0e7d-06a9-4bc4-806f-fee4f1595bd2",
                  "parentUUID": "633e4317-70c2-4c70-8064-2ff5a5712aa7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "38ea74d3-aa08-40d1-93d6-9b56af413bca",
                "c9ac0e7d-06a9-4bc4-806f-fee4f1595bd2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 31,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "72930406-0d50-4dea-9e24-cdef8ed96643",
              "title": "Update a group",
              "fullFile": "/Users/farouqabdurrahman/Desktop/Kuliah/5. Semester/FWE/learning-corner/backend/test/group.controller.test.ts",
              "file": "/test/group.controller.test.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "can successfully update a group",
                  "fullTitle": "Group Controller Test Update a group can successfully update a group",
                  "timedOut": false,
                  "duration": 37,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .put(\"/\" + group.id)\n    .send({\n    description: \"an updated description\",\n})\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .set(\"Authorization\", token)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(200);\n    (0, chai_1.expect)(res.body.description).to.be.equal(\"an updated description\");\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                  "err": {},
                  "uuid": "7f6a1d5f-340f-4130-8834-3c1a9ae9fd2e",
                  "parentUUID": "72930406-0d50-4dea-9e24-cdef8ed96643",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "cannot update a group without authorization",
                  "fullTitle": "Group Controller Test Update a group cannot update a group without authorization",
                  "timedOut": false,
                  "duration": 23,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .put(\"/\" + group.id)\n    .send({\n    description: \"an updated description\",\n})\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .set(\"Authorization\", falseToken)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(401);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                  "err": {},
                  "uuid": "66200262-dd97-4cb3-8294-210d8d4f059f",
                  "parentUUID": "72930406-0d50-4dea-9e24-cdef8ed96643",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "cannot update a group with an invalid id",
                  "fullTitle": "Group Controller Test Update a group cannot update a group with an invalid id",
                  "timedOut": false,
                  "duration": 11,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .put(\"/1\")\n    .send({\n    description: \"an updated description\",\n})\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .set(\"Authorization\", token)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(404);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                  "err": {},
                  "uuid": "b41f1e72-2e47-4bdc-b1cb-86f4ffea8537",
                  "parentUUID": "72930406-0d50-4dea-9e24-cdef8ed96643",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7f6a1d5f-340f-4130-8834-3c1a9ae9fd2e",
                "66200262-dd97-4cb3-8294-210d8d4f059f",
                "b41f1e72-2e47-4bdc-b1cb-86f4ffea8537"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 71,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "79a49b25-29f2-4c3d-ac05-b4b4e9b9d112",
              "title": "Create a section in a group",
              "fullFile": "/Users/farouqabdurrahman/Desktop/Kuliah/5. Semester/FWE/learning-corner/backend/test/group.controller.test.ts",
              "file": "/test/group.controller.test.ts",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Create a section in a group\"",
                  "fullTitle": "Group Controller Test Create a section in a group \"before all\" hook in \"Create a section in a group\"",
                  "timedOut": false,
                  "duration": 38,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(\"localhost:4000\")\n    .put(`/users/${userId}/course/${course.id}/group/${group.id}`)\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .set(\"Authorization\", token)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(200);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                  "err": {},
                  "uuid": "18b09d12-beb7-42df-bb72-e6a19906f117",
                  "parentUUID": "79a49b25-29f2-4c3d-ac05-b4b4e9b9d112",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "can successfully create a section in a group",
                  "fullTitle": "Group Controller Test Create a section in a group can successfully create a section in a group",
                  "timedOut": false,
                  "duration": 38,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .post(`/${group.id}/section`)\n    .send(mockupData_1.mockup_section)\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .set(\"Authorization\", token)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(201);\n    (0, chai_1.expect)(res.body.id).not.to.be.null;\n    (0, chai_1.expect)(res.body.heading).to.be.equal(mockupData_1.mockup_section.heading);\n    (0, chai_1.expect)(res.body.description).to.be.equal(mockupData_1.mockup_section.description);\n    (0, chai_1.expect)(res.body.text).to.be.equal(mockupData_1.mockup_section.text);\n    section = res.body;\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                  "err": {},
                  "uuid": "9ec6a5cf-21ba-4620-b830-9e119780cb35",
                  "parentUUID": "79a49b25-29f2-4c3d-ac05-b4b4e9b9d112",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "cannot create a section in a group without authorization",
                  "fullTitle": "Group Controller Test Create a section in a group cannot create a section in a group without authorization",
                  "timedOut": false,
                  "duration": 23,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .post(`/${group.id}/section`)\n    .send(mockupData_1.mockup_section)\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .set(\"Authorization\", falseToken)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(401);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                  "err": {},
                  "uuid": "01d44659-280a-4be3-a010-213af6732a0b",
                  "parentUUID": "79a49b25-29f2-4c3d-ac05-b4b4e9b9d112",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "cannot create a section in a group with an invalid id",
                  "fullTitle": "Group Controller Test Create a section in a group cannot create a section in a group with an invalid id",
                  "timedOut": false,
                  "duration": 14,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .post(\"/1/section\")\n    .send(mockupData_1.mockup_section)\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .set(\"Authorization\", token)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(404);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                  "err": {},
                  "uuid": "3961b4c3-d15b-4d78-bf64-914b89e5a2bf",
                  "parentUUID": "79a49b25-29f2-4c3d-ac05-b4b4e9b9d112",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9ec6a5cf-21ba-4620-b830-9e119780cb35",
                "01d44659-280a-4be3-a010-213af6732a0b",
                "3961b4c3-d15b-4d78-bf64-914b89e5a2bf"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 75,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "bd24459a-1371-49e5-b9e8-aa33feb6ed09",
              "title": "Update a section in a group",
              "fullFile": "/Users/farouqabdurrahman/Desktop/Kuliah/5. Semester/FWE/learning-corner/backend/test/group.controller.test.ts",
              "file": "/test/group.controller.test.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "can successfully update a section in a group",
                  "fullTitle": "Group Controller Test Update a section in a group can successfully update a section in a group",
                  "timedOut": false,
                  "duration": 87,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .put(`/${group.id}/section/${section.id}`)\n    .send({\n    heading: \"Updated Mockup Section\",\n})\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .set(\"Authorization\", token)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(200);\n    (0, chai_1.expect)(res.body.heading).to.be.equal(\"Updated Mockup Section\");\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                  "err": {},
                  "uuid": "bfe21a20-3168-4ecc-a458-57d699391bb1",
                  "parentUUID": "bd24459a-1371-49e5-b9e8-aa33feb6ed09",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "cannot update a section in a group without authorization",
                  "fullTitle": "Group Controller Test Update a section in a group cannot update a section in a group without authorization",
                  "timedOut": false,
                  "duration": 24,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .put(`/${group.id}/section/${section.id}`)\n    .send({\n    heading: \"Updated Mockup Section\",\n})\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .set(\"Authorization\", falseToken)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(401);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                  "err": {},
                  "uuid": "d0cdfb2e-957b-4011-bfbd-6ecd46e1d9fc",
                  "parentUUID": "bd24459a-1371-49e5-b9e8-aa33feb6ed09",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "cannot update a section in a group with an invalid id",
                  "fullTitle": "Group Controller Test Update a section in a group cannot update a section in a group with an invalid id",
                  "timedOut": false,
                  "duration": 9,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .put(`/1/section/${section.id}`)\n    .send({\n    heading: \"Updated Mockup Section\",\n})\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .set(\"Authorization\", token)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(404);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                  "err": {},
                  "uuid": "98fff070-9bf6-4b63-9077-6edb4a0752a0",
                  "parentUUID": "bd24459a-1371-49e5-b9e8-aa33feb6ed09",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "cannot update a section with an invalid id in a group",
                  "fullTitle": "Group Controller Test Update a section in a group cannot update a section with an invalid id in a group",
                  "timedOut": false,
                  "duration": 25,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .put(`/${group.id}/section/1`)\n    .send({\n    heading: \"Updated Mockup Section\",\n})\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .set(\"Authorization\", token)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(404);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                  "err": {},
                  "uuid": "3d8bd24d-97ec-43ee-ba84-c1cfb67a3d4a",
                  "parentUUID": "bd24459a-1371-49e5-b9e8-aa33feb6ed09",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "bfe21a20-3168-4ecc-a458-57d699391bb1",
                "d0cdfb2e-957b-4011-bfbd-6ecd46e1d9fc",
                "98fff070-9bf6-4b63-9077-6edb4a0752a0",
                "3d8bd24d-97ec-43ee-ba84-c1cfb67a3d4a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 145,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "634f8df7-51ef-44af-8c50-e7d3dc6aab8b",
              "title": "Delete a section in a group",
              "fullFile": "/Users/farouqabdurrahman/Desktop/Kuliah/5. Semester/FWE/learning-corner/backend/test/group.controller.test.ts",
              "file": "/test/group.controller.test.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "can successfully delete a section in a group",
                  "fullTitle": "Group Controller Test Delete a section in a group can successfully delete a section in a group",
                  "timedOut": false,
                  "duration": 47,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .delete(`/${group.id}/section/${section.id}`)\n    .set(\"Authorization\", token)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(204);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                  "err": {},
                  "uuid": "bdf4be3b-24f1-4dbe-97d5-0730a537be93",
                  "parentUUID": "634f8df7-51ef-44af-8c50-e7d3dc6aab8b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "cannot delete a section in a group without authorization",
                  "fullTitle": "Group Controller Test Delete a section in a group cannot delete a section in a group without authorization",
                  "timedOut": false,
                  "duration": 24,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .delete(`/${group.id}/section/${section.id}`)\n    .set(\"Authorization\", falseToken)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(401);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                  "err": {},
                  "uuid": "57e98dc7-ce37-441d-875d-c31a3159e9b1",
                  "parentUUID": "634f8df7-51ef-44af-8c50-e7d3dc6aab8b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "cannot delete a section in a group with an invalid id",
                  "fullTitle": "Group Controller Test Delete a section in a group cannot delete a section in a group with an invalid id",
                  "timedOut": false,
                  "duration": 10,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .delete(`/1/section/${section.id}`)\n    .set(\"Authorization\", token)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(404);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                  "err": {},
                  "uuid": "ef94baa3-2e50-40ca-9f8b-cb5b4a38ccbd",
                  "parentUUID": "634f8df7-51ef-44af-8c50-e7d3dc6aab8b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "cannot delete a section with an invalid id in a group",
                  "fullTitle": "Group Controller Test Delete a section in a group cannot delete a section with an invalid id in a group",
                  "timedOut": false,
                  "duration": 26,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .delete(`/${group.id}/section/1`)\n    .set(\"Authorization\", token)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(404);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                  "err": {},
                  "uuid": "b325465f-2db7-420a-941c-8d09bac6e8f1",
                  "parentUUID": "634f8df7-51ef-44af-8c50-e7d3dc6aab8b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "bdf4be3b-24f1-4dbe-97d5-0730a537be93",
                "57e98dc7-ce37-441d-875d-c31a3159e9b1",
                "ef94baa3-2e50-40ca-9f8b-cb5b4a38ccbd",
                "b325465f-2db7-420a-941c-8d09bac6e8f1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 107,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "753b4c84-30ff-4a6b-8d0f-98800e5521b7",
              "title": "Get messages",
              "fullFile": "/Users/farouqabdurrahman/Desktop/Kuliah/5. Semester/FWE/learning-corner/backend/test/group.controller.test.ts",
              "file": "/test/group.controller.test.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "can successfully get a messages in a group",
                  "fullTitle": "Group Controller Test Get messages can successfully get a messages in a group",
                  "timedOut": false,
                  "duration": 27,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .get(`/${group.id}/message`)\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .set(\"Authorization\", token)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(200);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                  "err": {},
                  "uuid": "9c5313e0-04a1-4155-8825-ba6898060c16",
                  "parentUUID": "753b4c84-30ff-4a6b-8d0f-98800e5521b7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "cannot get a messages in a group without authorization",
                  "fullTitle": "Group Controller Test Get messages cannot get a messages in a group without authorization",
                  "timedOut": false,
                  "duration": 37,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .get(`/${group.id}/message`)\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .set(\"Authorization\", falseToken)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(401);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                  "err": {},
                  "uuid": "0a2d714a-f133-4001-b6eb-e7c437054831",
                  "parentUUID": "753b4c84-30ff-4a6b-8d0f-98800e5521b7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "cannot get a messages in a group with an invalid id",
                  "fullTitle": "Group Controller Test Get messages cannot get a messages in a group with an invalid id",
                  "timedOut": false,
                  "duration": 9,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .get(\"/1/message\")\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .set(\"Authorization\", token)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(404);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                  "err": {},
                  "uuid": "94d1b82a-9e04-4ac6-9b64-d71731b34cd7",
                  "parentUUID": "753b4c84-30ff-4a6b-8d0f-98800e5521b7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9c5313e0-04a1-4155-8825-ba6898060c16",
                "0a2d714a-f133-4001-b6eb-e7c437054831",
                "94d1b82a-9e04-4ac6-9b64-d71731b34cd7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 73,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "e997369b-bca2-4e95-8a46-52f27b6aef96",
              "title": "Delete a group",
              "fullFile": "/Users/farouqabdurrahman/Desktop/Kuliah/5. Semester/FWE/learning-corner/backend/test/group.controller.test.ts",
              "file": "/test/group.controller.test.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "cannot delete a group without authorization",
                  "fullTitle": "Group Controller Test Delete a group cannot delete a group without authorization",
                  "timedOut": false,
                  "duration": 30,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .delete(\"/\" + group.id)\n    .set(\"Authorization\", falseToken)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(401);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                  "err": {},
                  "uuid": "d5ebf216-0395-47f4-94bd-a304d1fe04e3",
                  "parentUUID": "e997369b-bca2-4e95-8a46-52f27b6aef96",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "cannot delete a group with an invalid id",
                  "fullTitle": "Group Controller Test Delete a group cannot delete a group with an invalid id",
                  "timedOut": false,
                  "duration": 12,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .delete(\"/1\")\n    .set(\"Authorization\", token)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(404);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                  "err": {},
                  "uuid": "e6bf4dd6-9b92-41f7-8a00-2fe550c03872",
                  "parentUUID": "e997369b-bca2-4e95-8a46-52f27b6aef96",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "can successfully delete a group",
                  "fullTitle": "Group Controller Test Delete a group can successfully delete a group",
                  "timedOut": false,
                  "duration": 54,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .delete(\"/\" + group.id)\n    .set(\"Authorization\", token)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(204);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                  "err": {},
                  "uuid": "ce1f9749-dad3-485b-a281-74f448794bb5",
                  "parentUUID": "e997369b-bca2-4e95-8a46-52f27b6aef96",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d5ebf216-0395-47f4-94bd-a304d1fe04e3",
                "e6bf4dd6-9b92-41f7-8a00-2fe550c03872",
                "ce1f9749-dad3-485b-a281-74f448794bb5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 96,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "72925406-4ba3-446f-b152-35bc132adda8",
          "title": "User Controller Test",
          "fullFile": "/Users/farouqabdurrahman/Desktop/Kuliah/5. Semester/FWE/learning-corner/backend/test/user.controller.test.ts",
          "file": "/test/user.controller.test.ts",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"User Controller Test\"",
              "fullTitle": "User Controller Test \"before all\" hook in \"User Controller Test\"",
              "timedOut": false,
              "duration": 351,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, supertest_1.default)(\"localhost:4000\")\n    .post(\"/auth/register\")\n    .send(mockupData_1.mockup_user)\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .then((res) => {\n    userId = res.body.id;\n    (0, supertest_1.default)(\"localhost:4000\")\n        .post(\"/auth/login\")\n        .send({\n        email: mockupData_1.mockup_user.email,\n        password: mockupData_1.mockup_user.password,\n    })\n        .set(\"Accept\", \"application/json\")\n        .set(\"Content-Type\", \"application/json\")\n        .end((err, res) => {\n        token = res.body.accessToken;\n        (0, supertest_1.default)(\"localhost:4000\")\n            .post(\"/courses\")\n            .send(mockupData_1.mockup_course)\n            .set(\"Accept\", \"application/json\")\n            .set(\"Content-Type\", \"application/json\")\n            .set(\"Authorization\", token)\n            .end((err, res) => {\n            course = res.body;\n            courseId = res.body.id;\n            (0, supertest_1.default)(\"localhost:4000\")\n                .put(`/users/${userId}/course/${courseId}`)\n                .set(\"Accept\", \"application/json\")\n                .set(\"Content-Type\", \"application/json\")\n                .set(\"Authorization\", token)\n                .end((err, res) => {\n                (0, supertest_1.default)(\"localhost:4000\")\n                    .post(\"/groups\")\n                    .set(\"Accept\", \"application/json\")\n                    .set(\"Content-Type\", \"application/json\")\n                    .set(\"Authorization\", token)\n                    .send(Object.assign(Object.assign({}, mockupData_1.mockup_group), { course: course }))\n                    .end((err, res) => {\n                    groupId = res.body.id;\n                    if (err) {\n                        throw err;\n                    }\n                    done();\n                });\n            });\n        });\n    });\n})\n    .catch((err) => {\n    throw err;\n});",
              "err": {},
              "uuid": "681c59d8-9330-4b8e-91e4-24fdd2e9e079",
              "parentUUID": "72925406-4ba3-446f-b152-35bc132adda8",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "ba8633c9-3ced-48b9-bb69-e708808bedf3",
              "title": "Get a user by ID",
              "fullFile": "/Users/farouqabdurrahman/Desktop/Kuliah/5. Semester/FWE/learning-corner/backend/test/user.controller.test.ts",
              "file": "/test/user.controller.test.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "can successfully get a user",
                  "fullTitle": "User Controller Test Get a user by ID can successfully get a user",
                  "timedOut": false,
                  "duration": 41,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .get(`/${userId}`)\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .set(\"Authorization\", token)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(200);\n    (0, chai_1.expect)(res.body.id).to.be.equal(userId);\n    (0, chai_1.expect)(res.body.firstName).to.be.equal(mockupData_1.mockup_user.firstName);\n    (0, chai_1.expect)(res.body.lastName).to.be.equal(mockupData_1.mockup_user.lastName);\n    (0, chai_1.expect)(res.body.email).to.be.equal(mockupData_1.mockup_user.email);\n    (0, chai_1.expect)(res.body.photo).to.be.equal(mockupData_1.mockup_user.photo);\n    if (err)\n        throw err;\n    done();\n});",
                  "err": {},
                  "uuid": "8b6ea01d-9d53-4449-8a17-b155ba27f278",
                  "parentUUID": "ba8633c9-3ced-48b9-bb69-e708808bedf3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "cannot get a user with an invalid id",
                  "fullTitle": "User Controller Test Get a user by ID cannot get a user with an invalid id",
                  "timedOut": false,
                  "duration": 15,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .get(`/2`)\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .set(\"Authorization\", token)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(204);\n    if (err)\n        throw err;\n    done();\n});",
                  "err": {},
                  "uuid": "d04bf51a-b45c-494f-9b27-3091eaf89ddc",
                  "parentUUID": "ba8633c9-3ced-48b9-bb69-e708808bedf3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8b6ea01d-9d53-4449-8a17-b155ba27f278",
                "d04bf51a-b45c-494f-9b27-3091eaf89ddc"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 56,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "0c396ed9-e095-4724-93e1-cc5ecc265d67",
              "title": "Update a user",
              "fullFile": "/Users/farouqabdurrahman/Desktop/Kuliah/5. Semester/FWE/learning-corner/backend/test/user.controller.test.ts",
              "file": "/test/user.controller.test.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "can successfully update a user",
                  "fullTitle": "User Controller Test Update a user can successfully update a user",
                  "timedOut": false,
                  "duration": 43,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .put(`/${userId}`)\n    .send({ lastName: \"Mustermann\" })\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .set(\"Authorization\", token)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(200);\n    (0, chai_1.expect)(res.body.lastName).to.be.equal(\"Mustermann\");\n    if (err)\n        throw err;\n    done();\n});",
                  "err": {},
                  "uuid": "45173f0c-8e1a-4ce9-99b0-456a0873d93d",
                  "parentUUID": "0c396ed9-e095-4724-93e1-cc5ecc265d67",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "cannot update a user with an invalid id",
                  "fullTitle": "User Controller Test Update a user cannot update a user with an invalid id",
                  "timedOut": false,
                  "duration": 16,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .put(`/2`)\n    .send({ lastName: \"Mustermann\" })\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .set(\"Authorization\", token)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(404);\n    if (err)\n        throw err;\n    done();\n});",
                  "err": {},
                  "uuid": "1264d8ec-ee16-4703-8785-3374c7fa0a89",
                  "parentUUID": "0c396ed9-e095-4724-93e1-cc5ecc265d67",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "45173f0c-8e1a-4ce9-99b0-456a0873d93d",
                "1264d8ec-ee16-4703-8785-3374c7fa0a89"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 59,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "6144e3c3-1b66-4ac2-8a9c-6d0b4fc167a2",
              "title": "Get user groups",
              "fullFile": "/Users/farouqabdurrahman/Desktop/Kuliah/5. Semester/FWE/learning-corner/backend/test/user.controller.test.ts",
              "file": "/test/user.controller.test.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "can successfully get user groups",
                  "fullTitle": "User Controller Test Get user groups can successfully get user groups",
                  "timedOut": false,
                  "duration": 17,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .get(`/${userId}/groups`)\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .set(\"Authorization\", token)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(200);\n    if (err)\n        throw err;\n    done();\n});",
                  "err": {},
                  "uuid": "824fcd57-6c7c-4cdf-9325-b5e5d83e823c",
                  "parentUUID": "6144e3c3-1b66-4ac2-8a9c-6d0b4fc167a2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "cannot get groups of user with an invalid id",
                  "fullTitle": "User Controller Test Get user groups cannot get groups of user with an invalid id",
                  "timedOut": false,
                  "duration": 13,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .get(`/2/groups`)\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .set(\"Authorization\", token)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(404);\n    if (err)\n        throw err;\n    done();\n});",
                  "err": {},
                  "uuid": "fb64f668-47d5-4e63-bf78-495512087cf3",
                  "parentUUID": "6144e3c3-1b66-4ac2-8a9c-6d0b4fc167a2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "824fcd57-6c7c-4cdf-9325-b5e5d83e823c",
                "fb64f668-47d5-4e63-bf78-495512087cf3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 30,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "31e1e9a3-c7ac-46c9-9bb1-90a1a4c17b54",
              "title": "User's Course Interaction",
              "fullFile": "/Users/farouqabdurrahman/Desktop/Kuliah/5. Semester/FWE/learning-corner/backend/test/user.controller.test.ts",
              "file": "/test/user.controller.test.ts",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"User's Course Interaction\"",
                  "fullTitle": "User Controller Test User's Course Interaction \"before all\" hook in \"User's Course Interaction\"",
                  "timedOut": false,
                  "duration": 244,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(\"localhost:4000\")\n    .post(\"/auth/register\")\n    .send(Object.assign(Object.assign({}, mockupData_1.mockup_user), { email: \"test@mail.com\" }))\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .then((res) => {\n    userId2 = res.body.id;\n    (0, supertest_1.default)(\"localhost:4000\")\n        .post(\"/auth/login\")\n        .send({\n        email: \"test@mail.com\",\n        password: mockupData_1.mockup_user.password,\n    })\n        .set(\"Accept\", \"application/json\")\n        .set(\"Content-Type\", \"application/json\")\n        .end((err, res) => {\n        token2 = res.body.accessToken;\n        if (err) {\n            throw err;\n        }\n        done();\n    });\n})\n    .catch((err) => {\n    throw err;\n});",
                  "err": {},
                  "uuid": "9c0ff6fb-4faa-497f-80e3-b2e7056270df",
                  "parentUUID": "31e1e9a3-c7ac-46c9-9bb1-90a1a4c17b54",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after all\" hook in \"User's Course Interaction\"",
                  "fullTitle": "User Controller Test User's Course Interaction \"after all\" hook in \"User's Course Interaction\"",
                  "timedOut": false,
                  "duration": 19,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .delete(\"/\" + userId2)\n    .set(\"Authorization\", token2)\n    .end((err, res) => {\n    if (err)\n        throw err;\n    done();\n});",
                  "err": {},
                  "uuid": "fd7d06fd-9308-477a-a7e7-9f15c5723fcc",
                  "parentUUID": "31e1e9a3-c7ac-46c9-9bb1-90a1a4c17b54",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "Can join a course",
                  "fullTitle": "User Controller Test User's Course Interaction Can join a course",
                  "timedOut": false,
                  "duration": 23,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .put(`/${userId2}/course/${courseId}`)\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .set(\"Authorization\", token2)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(200);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                  "err": {},
                  "uuid": "e7a31357-eb0d-44e3-809c-b5062220e1cf",
                  "parentUUID": "31e1e9a3-c7ac-46c9-9bb1-90a1a4c17b54",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Cannot join an already joined course",
                  "fullTitle": "User Controller Test User's Course Interaction Cannot join an already joined course",
                  "timedOut": false,
                  "duration": 15,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .put(`/${userId2}/course/${courseId}`)\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .set(\"Authorization\", token2)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(409);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                  "err": {},
                  "uuid": "1fc22ad8-93a9-452b-be9f-71ed831dc9d2",
                  "parentUUID": "31e1e9a3-c7ac-46c9-9bb1-90a1a4c17b54",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Can leave a course",
                  "fullTitle": "User Controller Test User's Course Interaction Can leave a course",
                  "timedOut": false,
                  "duration": 26,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .delete(`/${userId2}/course/${courseId}`)\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .set(\"Authorization\", token2)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(204);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                  "err": {},
                  "uuid": "6df8d178-0b6e-4f8a-a5e1-6ddcdb39f3f9",
                  "parentUUID": "31e1e9a3-c7ac-46c9-9bb1-90a1a4c17b54",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Cannot leave a left course",
                  "fullTitle": "User Controller Test User's Course Interaction Cannot leave a left course",
                  "timedOut": false,
                  "duration": 14,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .delete(`/${userId2}/course/${courseId}`)\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .set(\"Authorization\", token2)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(409);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                  "err": {},
                  "uuid": "f29ca680-b551-4adf-a21b-553235b150fb",
                  "parentUUID": "31e1e9a3-c7ac-46c9-9bb1-90a1a4c17b54",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e7a31357-eb0d-44e3-809c-b5062220e1cf",
                "1fc22ad8-93a9-452b-be9f-71ed831dc9d2",
                "6df8d178-0b6e-4f8a-a5e1-6ddcdb39f3f9",
                "f29ca680-b551-4adf-a21b-553235b150fb"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 78,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "4e69834d-2f22-4c92-8eaf-448e8f36aa9d",
              "title": "User's Group Interaction",
              "fullFile": "/Users/farouqabdurrahman/Desktop/Kuliah/5. Semester/FWE/learning-corner/backend/test/user.controller.test.ts",
              "file": "/test/user.controller.test.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Can join a group",
                  "fullTitle": "User Controller Test User's Group Interaction Can join a group",
                  "timedOut": false,
                  "duration": 32,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .put(`/${userId}/course/${courseId}/group/${groupId}`)\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .set(\"Authorization\", token)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(200);\n    if (err) {\n        console.log(err);\n        throw err;\n    }\n    done();\n});",
                  "err": {},
                  "uuid": "b2b02fe0-61af-45bd-93e0-1f065e816e20",
                  "parentUUID": "4e69834d-2f22-4c92-8eaf-448e8f36aa9d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Cannot join an already joined group",
                  "fullTitle": "User Controller Test User's Group Interaction Cannot join an already joined group",
                  "timedOut": false,
                  "duration": 19,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .put(`/${userId}/course/${courseId}/group/${groupId}`)\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .set(\"Authorization\", token)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(409);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                  "err": {},
                  "uuid": "8dac8502-4238-4643-b58b-2d689a4d22e0",
                  "parentUUID": "4e69834d-2f22-4c92-8eaf-448e8f36aa9d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Can leave a group",
                  "fullTitle": "User Controller Test User's Group Interaction Can leave a group",
                  "timedOut": false,
                  "duration": 27,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .delete(`/${userId}/course/${courseId}/group/${groupId}`)\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .set(\"Authorization\", token)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(204);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                  "err": {},
                  "uuid": "6de6e1c4-065e-4f4b-9410-58cbce1cd827",
                  "parentUUID": "4e69834d-2f22-4c92-8eaf-448e8f36aa9d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Cannot leave a left group",
                  "fullTitle": "User Controller Test User's Group Interaction Cannot leave a left group",
                  "timedOut": false,
                  "duration": 26,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .delete(`/${userId}/course/${courseId}/group/${groupId}`)\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .set(\"Authorization\", token)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(409);\n    if (err) {\n        throw err;\n    }\n    done();\n});",
                  "err": {},
                  "uuid": "ba6e3a67-b3e8-42c3-b2e2-4a020063f2b5",
                  "parentUUID": "4e69834d-2f22-4c92-8eaf-448e8f36aa9d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b2b02fe0-61af-45bd-93e0-1f065e816e20",
                "8dac8502-4238-4643-b58b-2d689a4d22e0",
                "6de6e1c4-065e-4f4b-9410-58cbce1cd827",
                "ba6e3a67-b3e8-42c3-b2e2-4a020063f2b5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 104,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "f1ebe017-209b-462b-8228-83dde07744bb",
              "title": "Favorite course",
              "fullFile": "/Users/farouqabdurrahman/Desktop/Kuliah/5. Semester/FWE/learning-corner/backend/test/user.controller.test.ts",
              "file": "/test/user.controller.test.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "can toggle favorite course of a user",
                  "fullTitle": "User Controller Test Favorite course can toggle favorite course of a user",
                  "timedOut": false,
                  "duration": 27,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .put(`/${userId}/course/${courseId}/favorite`)\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .set(\"Authorization\", token)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(200);\n    if (err)\n        throw err;\n    done();\n});",
                  "err": {},
                  "uuid": "ecc1e2e2-71f5-4ad0-8df4-151bf8e6be28",
                  "parentUUID": "f1ebe017-209b-462b-8228-83dde07744bb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "cannot toggle favorite course of a user with an invalid id",
                  "fullTitle": "User Controller Test Favorite course cannot toggle favorite course of a user with an invalid id",
                  "timedOut": false,
                  "duration": 13,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .put(`/2/course/${courseId}/favorite`)\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .set(\"Authorization\", token)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(404);\n    if (err)\n        throw err;\n    done();\n});",
                  "err": {},
                  "uuid": "a0ddac97-49a5-4fc2-b07c-705fc1698e93",
                  "parentUUID": "f1ebe017-209b-462b-8228-83dde07744bb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "cannot toggle favorite of a course with an invalid id",
                  "fullTitle": "User Controller Test Favorite course cannot toggle favorite of a course with an invalid id",
                  "timedOut": false,
                  "duration": 12,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .put(`/${userId}/course/7/favorite`)\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .set(\"Authorization\", token)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(404);\n    if (err)\n        throw err;\n    done();\n});",
                  "err": {},
                  "uuid": "4adb600b-a2d1-446e-a8cf-862a82d689e9",
                  "parentUUID": "f1ebe017-209b-462b-8228-83dde07744bb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "cannot toggle favorite of a course that have not joined yet",
                  "fullTitle": "User Controller Test Favorite course cannot toggle favorite of a course that have not joined yet",
                  "timedOut": false,
                  "duration": 14,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .put(`/${userId}/course/1/favorite`)\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .set(\"Authorization\", token)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(404);\n    if (err)\n        throw err;\n    done();\n});",
                  "err": {},
                  "uuid": "6b67aad2-c8a8-450c-90a8-b756c3c821aa",
                  "parentUUID": "f1ebe017-209b-462b-8228-83dde07744bb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "can get favorite courses of a user",
                  "fullTitle": "User Controller Test Favorite course can get favorite courses of a user",
                  "timedOut": false,
                  "duration": 17,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .get(`/${userId}/favorite`)\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .set(\"Authorization\", token)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(200);\n    if (err)\n        throw err;\n    done();\n});",
                  "err": {},
                  "uuid": "9cdbbef2-5df4-4ef9-904d-9519df5ab37d",
                  "parentUUID": "f1ebe017-209b-462b-8228-83dde07744bb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "cannot get favorite courses of a user with an invalid id",
                  "fullTitle": "User Controller Test Favorite course cannot get favorite courses of a user with an invalid id",
                  "timedOut": false,
                  "duration": 10,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .get(`/2/favorite`)\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", \"application/json\")\n    .set(\"Authorization\", token)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(404);\n    if (err)\n        throw err;\n    done();\n});",
                  "err": {},
                  "uuid": "bc360ba0-b333-4871-b1c9-2295db6e6921",
                  "parentUUID": "f1ebe017-209b-462b-8228-83dde07744bb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ecc1e2e2-71f5-4ad0-8df4-151bf8e6be28",
                "a0ddac97-49a5-4fc2-b07c-705fc1698e93",
                "4adb600b-a2d1-446e-a8cf-862a82d689e9",
                "6b67aad2-c8a8-450c-90a8-b756c3c821aa",
                "9cdbbef2-5df4-4ef9-904d-9519df5ab37d",
                "bc360ba0-b333-4871-b1c9-2295db6e6921"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 93,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "90ba753c-2241-4056-95da-5ff522249da2",
              "title": "Delete a user",
              "fullFile": "/Users/farouqabdurrahman/Desktop/Kuliah/5. Semester/FWE/learning-corner/backend/test/user.controller.test.ts",
              "file": "/test/user.controller.test.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "cannot delete a user with an invalid id",
                  "fullTitle": "User Controller Test Delete a user cannot delete a user with an invalid id",
                  "timedOut": false,
                  "duration": 11,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .delete(`/2`)\n    .set(\"Authorization\", token)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(404);\n    if (err)\n        throw err;\n    done();\n});",
                  "err": {},
                  "uuid": "586b6204-dc52-41f6-a64b-7c52358ec45b",
                  "parentUUID": "90ba753c-2241-4056-95da-5ff522249da2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "can successfully delete a user",
                  "fullTitle": "User Controller Test Delete a user can successfully delete a user",
                  "timedOut": false,
                  "duration": 18,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, supertest_1.default)(baseurl)\n    .delete(`/${userId}`)\n    .set(\"Authorization\", token)\n    .end((err, res) => {\n    (0, chai_1.expect)(res.statusCode).to.be.equal(204);\n    if (err)\n        throw err;\n    done();\n});",
                  "err": {},
                  "uuid": "8e3f18e8-b6b6-4825-8dab-bd6e94c732ee",
                  "parentUUID": "90ba753c-2241-4056-95da-5ff522249da2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "586b6204-dc52-41f6-a64b-7c52358ec45b",
                "8e3f18e8-b6b6-4825-8dab-bd6e94c732ee"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 29,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "test-results",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "test/reports",
        "reportFilename": "test-results"
      },
      "version": "6.2.0"
    }
  }
}